<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>132</title>
    <url>/2021/12/10/132/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
  </entry>
  <entry>
    <title>2021年度总结</title>
    <url>/2022/01/01/2021%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul>
<li>2021年终于过去了，其实我一直感觉时间还停留在2019年，甚至2020年好像被抽去了一样，时间啊，真是太严格了。</li>
<li>今年的上半年拒绝了别人，也被别人拒绝，但大学的齿轮却从四月三十号那天重新转动了，而下半年就是一路倒霉了，不管是回家突然下大雨快在公交车上晕倒，还是暑假打工被坑，而最困扰我的还是做的小手术出了意外，就是算是现在，我也依旧烦恼，恐怕以后也会烦恼，我永远的失去了一些东西。</li>
<li>甚至2021年的最后一天也是倒霉的，考试考了b卷，回家钥匙忘带，还让人给我寄了回来</li>
<li>2021年真是充满遗憾和痛苦的一年，什么也没有，什么也没有，真是倒霉，以后不到万不得已不会再做手术了。</li>
<li>现在是2021年1点29分，很困，很烦，不知道说些什么，不知道说了什么，希望接下来的一年，我能慢慢接受自己，能有所长进，能朝着一个目标努力。</li>
<li>2022，我来会会你了。</li>
</ul>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>感想</category>
      </categories>
      <tags>
        <tag>年度总结</tag>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年度葡萄杯</title>
    <url>/2022/01/11/2021%E5%B9%B4%E5%BA%A6%E8%91%A1%E8%90%84%E6%9D%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="🍇2021葡萄杯">🍇2021葡萄杯</h1>
<div class="note info flat"><p>视前注意<br>
1.此评选完全基于我个人<mark class="hl-label red">主观想法</mark> ，请勿代入<br>
2.以下作品<mark class="hl-label red">可能不是在2021年播出，上映，发行</mark><br>
3.此评选涉及一些<mark class="hl-label red">微小剧透</mark> ，请酌情入脑<br>
4.此评选只从我在<mark class="hl-label red">2021年内看/玩/听过</mark> 的作品中选出</p>
</div>
<h1 id="🍇开场白！">🍇开场白！</h1>
<p>2021年对我来说是一个忙碌、倒霉的一年，但在这一年中我还是看到了很多印象深刻的作品，好！闲话不多说，让我们现在开始吧！</p>
<h1 id="🏆2021年度最佳动画——《赛马娘-第二季》">🏆2021年度最佳动画——《赛马娘 第二季》</h1>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/b0b517a9f63e34a1.jpg" alt></p>
<p>作为2021年一月新番，居然从年初一路傲视群雄，不仅叫好还叫座，我之前有幸看了第一季，所以我无缝衔接进入了第二季的故事，《赛马娘 第二季》最珍贵的地方就是把一个故事讲的太好了，利用故事的编排，真实的事件，优秀的音乐，完美的节奏，明确的主题，一条主线贯穿始终，几条暗线相互编织最终与主线束成一股，一步一步的让我看到了那闪闪发光的核心，一路追下来真是太爽了，堪称典范般的制作无不透露出制作组的用心，我曾想为她专门写一个观后感，但是我写不出来，如果你看过这部番就能明白，这部番所要表达的已经完全表达出来了，我所写的观后感只是把她的台词又些了一遍，这也是这部番的厉害之处，她的台词功底，每一句话都十分重要，每一句话都是一个重点，oped里的歌词也是，无需多言，看就完事了！<br>
<img src="https://s3.bmp.ovh/imgs/2022/01/004d75f874492d9b.jpg" alt><br>
<img src="https://s3.bmp.ovh/imgs/2022/01/74dcb3c20463e4da.jpg" alt><br>
✒️总结：他们会继续奔跑，但眼中不会只有终点线</p>
<h1 id="🏆-2021年度最佳长篇动画——《EVA：终》">🏆 2021年度最佳长篇动画——《EVA：终》</h1>
<p><img src="https://s3.bmp.ovh/imgs/2022/03/29/616ecc24cd749a7e.jpg" alt><br>
EVA的故事终于结束了，从TV到旧剧场再到新剧场版，这次我终于看懂了一点，看懂了一点EVA所要表达的，跟以往的EVA不同，庵野秀明终于愿意讲述自己的内心了，他终于愿意与观众和解了，这次的故事就像他的副标题终一样，是一切的结束，这一部的目标就是要结束这个故事，看完之后，他做到了，对我来说这就足够了，真嗣和司令的对峙，镜头和场景的转换，每个人的离场，以及那句“<em>再见了，所有的Evangelion</em>”给这个作品画下了一个完美的句号，EVA如同诅咒一般束缚着痞子也束缚着真嗣，我们常常忘记真嗣还只是一个孩子，一个还没长大的普通的男孩子，但，在没有EVA的世界里，真嗣长大了</p>
<p>✒️总结：对于这部作品想说很多，却说不出口，他实在太过于经典，却又在引领时代，当最后的《one last kiss》响起时，请静静的听完她，因为你要知道，不会再有第二个《EVA》了</p>
<h1 id="🏆2021年度最佳动画续作——《MEGALOBOX-第二季》">🏆2021年度最佳动画续作——《MEGALOBOX 第二季》</h1>
<p><img src="https://i.pixiv.re/c/600x1200_90_webp/img-master/img/2021/07/07/15/55/44/91074511_p3_master1200.jpg" alt><br>
极其稀有的优秀续作，作为《MEGALOBOX》的第二季不同于上一季，全新的主题与立意，一脉相承的制作水平和风格，一曲蜂鸟贯穿始终，可以看出来，制作组真的想讲好一个故事，作品探讨了除了梦想还有其他更重要的东西，围绕梦想，家人，英雄，信念等等，呈现出一副完整又富有深意的故事，动画中的对白，分镜，音乐都散发出一种独特的浪漫气息，使得作品多了几分慢慢品味的余韵，如果把他当作一部单纯的动画片来看待，那绝对就是买椟还珠了，希望你看完第一部再看这一部，第一部也是一个不可多得的佳作，讲述了关于一匹狼的故事，只有看完了第一都，你才能更好的享受这一部，这真的很难得，续作与前作质量相当，甚至超越了前作，这更加说明制作人早已经规划好了整个故事，并且坚持了下去，这真的太不容易，太珍贵了</p>
<p>✒️总结：一个追逐完梦想之后的故事</p>
<h1 id="🏆2021年度最佳单曲——《flower-of-life》—陽花-capo">🏆2021年度最佳单曲——《flower of life》—陽花/capo</h1>

    <div id="aplayer-owqHeuVB" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="0031vSgq46g7Ij" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="1000px" data-preload="auto" data-theme="#555"></div>   
<p>轻快的音调，磁性的声音，让人深陷其中的旋律，在那春末的我听到后受到了极大的震撼，是夏天的声音，一句“<em>the key,the earth,the sun a wind</em>”彻底的把我的思绪带入夏天，仿佛站在树下绿荫感受轻拂脸颊的微风，感受风的颜色，在那个时间段听到这首歌的我已经不可抑制的在脑中不断重复他的旋律，如果你问我2021年的夏天是什么时候来的，我会告诉你她随着这首歌而来的</p>
<p>✒️总结：“<em>but your smile for me any more,let’s be with me together during summer</em>”</p>
<h1 id="🏆2021年度最佳单机游戏——《死亡搁浅》">🏆2021年度最佳单机游戏——《死亡搁浅》</h1>
<p><a href="https://wall.alphacoders.com/big.php?i=883476"><img src="https://images6.alphacoders.com/883/883476.jpg"></a></p>
<p>我心中的满分作品，无论故事性，游戏性都十分出众，独特的游戏玩法注定使他让人非议，但幸运的是我非常喜欢，不，不能说是幸运，应该说是因为这款游戏实在是太好玩了，直到最后都在给你惊喜，剧情上的惊喜，道具上的惊喜，我说过很多次了，《死亡搁浅》不是单纯的在游戏里送货，而是一款送货的游戏，你可以感受在外漫步欣赏大自然给你的心旷神怡，也可以驾车行驶在公路上配送货物，还可以建造滑索来回穿梭，无论怎样他给你太多的选择，使简单送货变得有趣好玩，仅仅是当然不足以说明他的优秀，作为一款rpg他的故事也非常好，故事和讲述故事的方式有一种电影的质感，循序渐进，由浅到深，逐个击破，最后慕然回首，那人却在灯火阑珊处，每个人物都有独特的个人特点与故事，连最简单的npc也因为游戏中的邮件变得丰满真实</p>
<p>✒️总结：连接，以送货的方式连接人与人，以游戏的形式连接山姆与我，孤独却又不孤独，默默的陪伴总是给人予巨大的力量</p>
<h1 id="😅2021年度最不受待见游戏——《Fate-Grand-Order》">😅2021年度最不受待见游戏——《Fate Grand Order》</h1>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/6cc3a8471b89566b.jpg" alt></p>
<p>让我们恭喜《FGO》再次获得年度最不受待见将，虽然是第一届葡萄杯但已经连续好几年最不受待见了，真是不容易啊，侧面又说明了《FGO》对我来说有多不待见，时常感慨，怎么会有手游这种反人类的东西，而这种反人类的东西现在有如此受人追捧，骗钱的作品一个接着一个，《FGO》是我唯一玩的手游了，不为别的，就是想看到故事的结局，今年又是什么好活没出的一年，烂活倒是出的挺好，我时常发问《FGO》什么时候酸啊，这种每天只为登录的软件究竟存在的意义是什么，运营整天就能躺何站，看来还是有钱人多啊，不过fgo还是有优点的，当你深夜失眠的时候拿起手机刷几把fgo居然神奇的就有了困意，《FGO》——我的安眠药</p>
<p>✒️总结：希望加速，无论结果怎样，希望加速</p>
<h1 id="😅2021年度最佳粪作——《进击的巨人》">😅2021年度最佳粪作——《进击的巨人》</h1>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/5a5395b42782e95f.jpg" alt><br>
<img src="https://s3.bmp.ovh/imgs/2022/01/6dd8befadecc895e.jpg" alt><br>
<img src="https://s3.bmp.ovh/imgs/2022/01/7b6c54cc14a720de.jpg" alt></p>
<p>《进击的巨人》的完结在近几年可谓是万众期待，让人瞠目结舌的展开一个接着一个，再加上wit的制作，哇，太nb了，然后他就烂尾了，而且不是一般的烂尾，是大烂尾，在这里我不想把话说得太难听，只能请你想象最为恶劣的形容词了，真的是超巨大烂尾，我实在无法想象，这个世界给了谏山创（《进击的巨人》作者）多大的恶意，居然能让他画出如此恶心人的结局，而且，而且，只用了一话，只用了一话！什么意思，意思就是，在这最后一话之前，剧情的展开还算正常，也不能算正常，只能说还没有烂的彻底，但仅凭一话，仅凭最后这一话，就把整部作品全部搞垮，太厉害了，太nb了，只能说不愧是谏人，前面画的有多厉害就显得这部作品有多恶心，就像坐在观众席上正在欣赏一场音乐会的结束，虽然最后有点小瑕疵，但还算能够接受，结果指挥指挥完突然面向观众，脱下裤子，露出生殖器官，开始排泄，排泄的声音全部收进麦克风中经音响的扩大，噗呲噗呲的声音充满了整个音乐厅，随之慢慢而来的还有它的味道，又或者你忍着寒冷坐在草地上正在欣赏美丽的夕阳，结果一个路人突然过来在你头上排泄，稀得，并不是很滑的汁水顺着你的头发汩汩流下，你用手抹去感受到，其中还有一块一块的固体物，紧接着，刺鼻的气味冲进了你的鼻子，让你一阵恶心，顺流而下的汁水流到你的嘴角，你不小心尝了一口它的味道，正当你手忙脚乱，气愤至极的时候，那个在你头上排泄的人已经扬长而去，再也追不上了…</p>
<p>什么勇气，什么自由，什么心脏最后都喂了狗，一切的一切都是为了满足谏人的恶趣味，都最后了还要报复观众，我不理解，但是厉害，我想为你鼓掌，你成功恶心到我了，而且不止我一个，你成功的让所有人都不满意，以这个方面你还挺成功的，但这值得吗，所有人都会把你当成人人喊打的老鼠，这个结局不敢说是名流青史把也敢说是遗臭万年了，太烂了，实在是太烂了，我真的没见过怎么烂的故事了，不单单是这个结尾，这个结尾烂到把整个作品都否定，真的太太烂了…</p>
<p>我不明白，为什么，为什么三笠一直都没有成长啊，直到最后与艾伦的绝诀别有什么意义吗？我不明白，为什么，为什么阿尔敏没有起到任何作用啊，永远都在中当一个背景板，永远都是谈谈谈，还感谢屠杀者，还谈恋爱，这绿卡你拿的就这么心安吗？我不明白，为什么，为什么艾伦的智商一直维持在初中生水平啊，是不是巨人之力给你带来了不可逆的大脑萎缩啊，智力已经无法再继续增长，真以为当谜语人智商就真的会增高啊，这就是你用仅剩的一点点脑细胞想出来的解决办法吗？</p>
<p>一部从头歪到脚的作品，我们不愿发现，也不愿承认，披着自由的日本右翼，卑劣民族的变态企图，战败国家的可笑妄想，时代已经变了</p>
<p>啥也不说了，只希望谏人能给wit磕几个</p>
<p>✒️总结：”<em>那种事不要啊啊啊啊啊啊</em>“”<em>三笠有了别的男人什么的至少要等个十年啊啊啊啊啊啊啊啊</em>“<br>
<img src="https://s3.bmp.ovh/imgs/2022/01/0243168f405bb693.jpg" alt></p>
<h1 id="🍇结束语">🍇结束语</h1>
<p>2021年终于过去，一切都将成为回忆，无论是我玩过的游戏，看过的动画，听过的音乐，终有结束，在这结束时刻我还是想在我心中留下一个坐标的，一个书签的，每年都有好作品，每年也都有坏作品，希望接下来的一年能有更多的感受，那么，我们明年再见，adios！🍇</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>感想</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>葡萄杯</tag>
        <tag>2021</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年度葡萄杯</title>
    <url>/2023/05/15/2022%E5%B9%B4%E5%BA%A6%E8%91%A1%E8%90%84%E6%9D%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="🍇2022葡萄杯">🍇2022葡萄杯</h1>
<div class="note info flat"><p>视前注意<br>
1.此评选完全基于我个人<mark class="hl-label red">主观想法</mark> ，请勿代入<br>
2.以下作品<mark class="hl-label red">可能不是在2022年播出，上映，发行</mark><br>
3.此评选涉及一些<mark class="hl-label red">微小剧透</mark> ，请酌情入脑<br>
4.此评选只从我在<mark class="hl-label red">2021年内看/玩/听过</mark> 的作品中选出</p>
</div>
<h1 id="🍇开场白！">🍇开场白！</h1>
<p>如果你要问我为什么23年都快过一半了才出22年的葡萄杯，那我只能老实回答因为年末玩了《只狼》又无缝玩了《艾尔登法环》接着又回老家过年，等回家已经二月了，又入手了ns玩了《塞尔达》，在家里闲着没事过的那叫一个昏天黑地，一晃眼就到这时候了，以至于前半年没看过一部番，甚至年前的十月番都没看完，都忘得差不多了，准备重新再看一遍，说再多也是因为我懒，去年还是看了不少东西，尤其是电影看了很多，但可惜电影这东西太短了，真是猪八戒吃人生果，还没尝出味呢，写这篇文章时也是常见的失眠一夜没睡，脑子转的慢，有很多不知所云的话，好了，闲话太多了，现在就开始吧</p>
<h1 id="🏆2022年度最佳作品——《冰菓》">🏆2022年度最佳作品——《冰菓》</h1>
<p><img src="https://s2.loli.net/2023/05/15/eG8RHjtIk5VzQoJ.jpg" alt></p>
<p>犹如春风携着花瓣拂过脸颊，用无形的抚摸为您添上淡淡的芬芳，在这平凡的人生所过的日常中，更能察觉到这是怎样不可思议的奇迹，以至于触及心灵，难以忘怀。<a href="#">Post not found: 《冰菓》——含蓄的蔷薇</a></p>
<p>✒️总结：请您放松、安静的慢慢欣赏。</p>
<h1 id="🏆2022年度最佳动画——《赛博朋克：边缘行者》">🏆2022年度最佳动画——《赛博朋克：边缘行者》</h1>
<p><img src="https://www.themoviedb.org/t/p/original/lqcDVZ8pyk08AVftMBildDR3QUK.jpg" alt></p>
<p>完美的第一集，让人看到有些恍惚，世界观的阐述与故事的开始。无法调节的矛盾为整部作品奠定了基调。埋下的伏笔也终于在最后解开了主角的心结。关于“赛博朋克”一切想象都在这一集中完全展现，之后的故事也只是在这基础上的有限延伸，也因如此，悲伤、快乐、无奈、痛苦、愤怒、沉默的最后，唯有疯狂<br>
正如那句著名的话，改变一个人只需要平凡的一天，也正如那个故事的结局一样，只有脆弱的人才会自甘堕落</p>
<p>✒️总结：另一个关于成长的故事</p>
<h1 id="🏆2022年度最佳动画续作——《灵能百分百第三季》">🏆2022年度最佳动画续作——《灵能百分百第三季》</h1>
<p><img src="https://www.themoviedb.org/t/p/original/589OxKR7fKKLFu9nT1nEuwLsapc.jpg" alt></p>
<p>即使拥有超能力也无法解决所有的问题，即使没有超能力也能解决很多问题，这就是灵能三季中所讲的故事，有些事情我们想的太过复杂，有些事情又想的太过简单，主角虽然拥有绝对的力量却依然是一个普通的人，这种不自然的认知的根本其实是对自身的极度自卑，当我们把超能力想象成是一种缺陷，似乎就能瞥见一丝主角的心理世界，我们羡慕主角拥有无所不能的超能力正如同主角羡慕周围的人拥有一个又一个的朋友，就是在这样的“缺陷”之下我们的主角一直以来都在压抑自身的情绪，以至于像一个没有感情的人，没错，就像一张白纸，故事的最后主角也终于染上的各种各样的情绪，交到了一个又一个的朋友，“超能力”虽然还在，但终于释然，终于尊重自己，终于得到那望不可及的对自我的信心了。<br>
非常难得的以质量不变的水准而完结的动画，简直就是动画界的熊猫！</p>
<p>✒️总结：每个人都羡慕mob，每个人都想成为mob，每个人其实都是mob</p>
<h1 id="🏆2022年度长篇动画——《哥斯拉：决战之都》">🏆2022年度长篇动画——《哥斯拉：决战之都》</h1>
<p><img src="https://www.themoviedb.org/t/p/original/2IVb66l3OyM2xzH2bYRxul7rgNL.jpg" alt></p>
<p>虽然哥斯拉动画电影三部曲已经不值一看但这三部曲中的第二部还是给了我非常大的震撼，没有第一部那样快的节奏和陌生的设定，也没有第三部拖沓的剧情和糟糕的表现，第二部的《决战之都》无论是节奏、剧情、作画都达到一个非常高的水平，观感也最舒服，无论是文戏还是武戏都有很高的水准，再加之最后的升华，我对他的评价非常高，可惜结局不行，以至于这个系列都没有看的价值了</p>
<p>✒️总结：不是选择对与错，而是在选择是否生存</p>
<h1 id="🏆2022年度最佳游戏——《只狼：影逝二度》">🏆2022年度最佳游戏——《只狼：影逝二度》</h1>
<p><img src="https://images5.alphacoders.com/981/981500.jpg" alt></p>
<p>刀与影之下的禅意总能让人在铁与血的战斗之后感慨眼前落日熔金，暮云合璧的悠长</p>
<p>✒️总结：<a href="https://steamcommunity.com/profiles/76561198877151251/reviews">游戏中甚至有些入戏</a></p>
<h1 id="🏆2022年度最佳创意——《portal-2》">🏆2022年度最佳创意——《portal 2》</h1>
<p><img src="https://images4.alphacoders.com/179/17966.jpg" alt></p>
<p>延续第一代玩法的同时加强的故事性，无法挑剔的一款游戏</p>
<h1 id="🏆2022年度最佳avg——《ever17》">🏆2022年度最佳avg——《ever17》</h1>
<p><img src="https://images7.alphacoders.com/896/896593.jpg" alt></p>
<p>毫无争议的神作，绝妙的诡计以及层层的铺垫让人惊叹</p>
<p>✒️总结：<a href="/2022/02/23/%E3%80%8Aever17%E3%80%8B%E2%80%94%E2%80%94i-need-you/" title="《ever17》——i need you!">《ever17》——i need you!</a></p>
<h1 id="🏆2022年度印象最深刻——《沙耶之歌》">🏆2022年度印象最深刻——《沙耶之歌》</h1>
<p><img src="https://bkimg.cdn.bcebos.com/pic/6159252dd42a28343afa3a2857b5c9ea15cebfb0?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UxODA=,g_7,xp_5,yp_5/format,f_auto" alt></p>
<p>虽然篇幅不长却依然给我以极大的震撼，巨大的反差与矛盾的结束久久萦绕在我的心中</p>
<p>✒️总结：<a href="https://www.bilibili.com/read/cv14675323">沙耶……沙耶……沙耶…………</a></p>
<h1 id="🏆2022年度最佳电影——《银翼杀手2049》">🏆2022年度最佳电影——《银翼杀手2049》</h1>
<p><img src="https://www.themoviedb.org/t/p/original/jsMVRjLwKWN3gaiGd9pJUrxezsp.jpg" alt></p>
<p>即使前作的光环非常耀眼也不影响这部续作十分优秀，最让我眼前一亮的是这部大片并不像其他欧美电影那样极具个人英雄主义，他的主角是一个沉默，孤独，渴望被关注同时也是一个拥有责任感的“人”，体会过失去也正确的认识了自己，最后依然能够坚持信念正是我最喜欢这部电影的地方</p>
<p>✒️总结：少了些暧昧，多了些残酷</p>
<h1 id="🏆2022年度最不受待见游戏《fgo》">🏆2022年度最不受待见游戏《fgo》</h1>
<p><img src="https://f.pz.al/pzal/2023/07/17/0b0c4a20e5d1c.jpg" alt></p>
<p>最近不知道断签了多少次，活动也是最后几天才打，剧情也没看多少，快点完结吧fgo</p>
<h1 id="🍇结束语">🍇结束语</h1>
<p>现在是2023年7月13日00：39，又是一个月，终于写完了这篇拖了半年之久的葡萄杯，很惭愧，明明去年看了很多东西，最后竟然写的如此简陋，2023年已经过半，就以现在开始多争取些时间用在更有意义的事情上，那么 半年后在见，adios！🍇</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈随笔</category>
        <category>葡萄杯</category>
      </categories>
      <tags>
        <tag>葡萄杯</tag>
        <tag>2022</tag>
      </tags>
  </entry>
  <entry>
    <title>2247随笔</title>
    <url>/2022/04/07/2247%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好久没更新博客了，最近也在调整状态整天玩游戏，时间果然是良药啊，渐渐的有些放下来了，关于这个博客还没想好该怎样使用，毕竟我也不是一个技术型人员，谢谢杂谈还行，不过没关系，不论我用它来写什么，它的存在就已经很有意义了</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>感想</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>ceshi</title>
    <url>/2021/12/19/ceshi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="/.io//ling.jpg" alt></p>
<h2 id="a-i-class-fas-fa-award-i-emoji💥💥💥">a <i class="fas fa-award"></i> emoji💥💥💥</h2>
<p>😄 😄 😄 😄</p>
<p>😄 😄 😄 😄✨<br>
✨✨✨✨ 💥💥💥🏆</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29004400&auto=1&height=66"></iframe>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=29004400&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>

    <div id="aplayer-EHvHCaLl" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="004LOOUJ1iTYpq" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="1000px" data-preload="auto" data-theme="#555"></div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% meting &quot;004LOOUJ1iTYpq&quot; &quot;tencent&quot; &quot;song&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:1000px&quot; &quot;preload:auto&quot;%&#125;</span><br></pre></td></tr></table></figure>
<iframe src="//player.bilibili.com/player.html?aid=810858179&bvid=BV1m34y1Y7sY&cid=579822895&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=810858179&amp;bvid=BV1m34y1Y7sY&amp;cid=579822895&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot; style=&quot;max-width: 100%&quot; width=&quot;100%&quot; height=&quot;550&quot;&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<details class="folding-tag" cyan><summary> 重命名 </summary>
              <div class="content">
              
              </div>
            </details>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folding cyan,重命名 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/12/06/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
  </entry>
  <entry>
    <title>javaEE学习笔记一</title>
    <url>/2022/02/28/javaEE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="下载JDK，配置">下载JDK，配置</h2>
<h2 id="下载Tomcat，测试">下载Tomcat，测试</h2>
<p>双击bin目录下的startup.bat，若双击后一闪而过，修改properties文件里，utf-8改为gbk，浏览器输入localhost：8080测试</p>
<h2 id="Maven下载安装和配置，">Maven下载安装和配置，</h2>
<p>配置：控制面板，系统，高级系统配置，环境环境变量，系统变量中新建MAVEN_HOME,变量名位maven根目录，然后修改系统变量中的path的变量值，在后面添加%MAVEN_HOME%\bin;</p>
<h2 id="Idea下载">Idea下载</h2>
<h2 id="Idea集成JDK">Idea集成JDK</h2>
<p><img src="https://s3.bmp.ovh/imgs/2022/02/fa13ee2f6b3b0d8d.jpg" alt></p>
<h2 id="Maven集成">Maven集成</h2>
<p><img src="https://s3.bmp.ovh/imgs/2022/02/65af6a628147279c.jpg" alt></p>
<h2 id="集成tomcat">集成tomcat</h2>
<p><img src="https://s3.bmp.ovh/imgs/2022/02/5774559a28c3d138.jpg" alt></p>
<h2 id="创建动态web项目">创建动态web项目</h2>
<p><img src="https://s3.bmp.ovh/imgs/2022/02/913133aff24fe67b.jpg" alt></p>
<p><img src="https://s3.bmp.ovh/imgs/2022/02/07a278dd3c761da5.jpg" alt></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaEE</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java判断语句</title>
    <url>/2022/04/14/java%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="判断语句1-if">判断语句1  if</h2>
<ul>
<li>if语句第一种格式： if</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(关系表达式)｛ </span><br><span class="line">	语句体; </span><br><span class="line">｝</span><br></pre></td></tr></table></figure>
<ul>
<li>执行流程
<ul>
<li>首先判断关系表达式看其结果是true还是false</li>
<li>如果是true就执行语句体</li>
<li>如果是false就不执行语句体</li>
</ul>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200919211142140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvdWdoQ1k=,size_16,color_FFFFFF,t_70#pic_center" alt></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123; </span><br><span class="line">	System.out.println(<span class="string">&quot;开始&quot;</span>); </span><br><span class="line">	<span class="comment">// 定义两个变量 </span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>; </span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="comment">//变量使用if判断 </span></span><br><span class="line">	<span class="keyword">if</span> (a == b)&#123; </span><br><span class="line">		System.out.println(<span class="string">&quot;a等于b&quot;</span>); </span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">int</span> c = <span class="number">10</span>; </span><br><span class="line">	<span class="keyword">if</span>(a == c)&#123; </span><br><span class="line">		System.out.println(<span class="string">&quot;a等于c&quot;</span>); </span><br><span class="line">		&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;结束&quot;</span>); </span><br><span class="line">	｝</span><br></pre></td></tr></table></figure>
<h2 id="判断语句2-if…else">判断语句2 if…else</h2>
<ul>
<li>if语句第二种格式： if…else</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(关系表达式) &#123;</span><br><span class="line"> 	语句体<span class="number">1</span>; </span><br><span class="line"> &#125;<span class="keyword">else</span> &#123; </span><br><span class="line"> 	语句体<span class="number">2</span>; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>执行流程</p>
<ul>
<li>
<p>首先判断关系表达式看其结果是true还是false</p>
</li>
<li>
<p>如果是true就执行语句体1</p>
</li>
<li>
<p>如果是false就执行语句体2</p>
<p><img src="https://img-blog.csdnimg.cn/20200919212243501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvdWdoQ1k=,size_16,color_FFFFFF,t_70#pic_center" alt></p>
</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123; </span><br><span class="line">	<span class="comment">// 判断给定的数据是奇数还是偶数 </span></span><br><span class="line">	<span class="comment">// 定义变量 </span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">1</span>; </span><br><span class="line">	<span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span>) &#123; </span><br><span class="line">		System.out.println(<span class="string">&quot;a是偶数&quot;</span>);</span><br><span class="line">	 &#125; <span class="keyword">else</span>&#123; </span><br><span class="line">	 	System.out.println(<span class="string">&quot;a是奇数&quot;</span>); </span><br><span class="line">	 &#125;</span><br><span class="line">	 System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="判断语句3-if…else-if…else">判断语句3 if…else if…else</h2>
<ul>
<li>if语句第三种格式： if…else if …else</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (判断条件<span class="number">1</span>) &#123; </span><br><span class="line">	执行语句<span class="number">1</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (判断条件<span class="number">2</span>) &#123;</span><br><span class="line"> 	执行语句<span class="number">2</span>; </span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (判断条件n) &#123; </span><br><span class="line">  	执行语句n; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">  	执行语句n+<span class="number">1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>执行流程<br>
首先判断关系表达式1看其结果是true还是false<br>
如果是true就执行语句体1<br>
如果是false就继续判断关系表达式2看其结果是true还是false<br>
如果是true就执行语句体2<br>
如果是false就继续判断关系表达式…看其结果是true还是false<br>
…<br>
如果没有任何关系表达式为true，就执行语句体n+1。</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/202009192129115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvdWdoQ1k=,size_16,color_FFFFFF,t_70#pic_center" alt></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">	<span class="comment">// x和y的关系满足如下： </span></span><br><span class="line">	<span class="comment">// x&gt;=3 y = 2x + 1; </span></span><br><span class="line">	<span class="comment">//‐1&lt;=x&lt;3 y = 2x; </span></span><br><span class="line">	<span class="comment">// x&lt;=‐1 y = 2x – 1; </span></span><br><span class="line">	<span class="comment">// 根据给定的x的值，计算出y的值并输出。 </span></span><br><span class="line">	<span class="comment">// 定义变量 </span></span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">5</span>; </span><br><span class="line">	<span class="keyword">int</span> y; </span><br><span class="line">	<span class="keyword">if</span> (x&gt;= <span class="number">3</span>) &#123; </span><br><span class="line">		y = <span class="number">2</span> * x + <span class="number">1</span>; </span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= ‐<span class="number">1</span> &amp;&amp; x &lt; <span class="number">3</span>) &#123; </span><br><span class="line">		y = <span class="number">2</span> * x; </span><br><span class="line">	&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">		y = <span class="number">2</span> * x ‐ <span class="number">1</span>; </span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;y的值是：&quot;</span>+y); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="语句练习">语句练习</h2>
<ul>
<li>指定考试成绩，判断学生等级
<ul>
<li>90-100 优秀</li>
<li>80-89 好</li>
<li>70-79 良</li>
<li>60-69 及格</li>
<li>60以下 不及格</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line"><span class="keyword">int</span> score = <span class="number">100</span>; </span><br><span class="line"><span class="keyword">if</span>(score&lt;<span class="number">0</span> || score&gt;<span class="number">100</span>)&#123; </span><br><span class="line">	System.out.println(<span class="string">&quot;你的成绩是错误的&quot;</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">90</span> &amp;&amp; score&lt;=<span class="number">100</span>)&#123;</span><br><span class="line"> 	System.out.println(<span class="string">&quot;你的成绩属于优秀&quot;</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">80</span> &amp;&amp; score&lt;<span class="number">90</span>)&#123;</span><br><span class="line">  	System.out.println(<span class="string">&quot;你的成绩属于好&quot;</span>); </span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">70</span> &amp;&amp; score&lt;<span class="number">80</span>)&#123; </span><br><span class="line"> 	System.out.println(<span class="string">&quot;你的成绩属于良&quot;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">60</span> &amp;&amp; score&lt;<span class="number">70</span>)&#123; </span><br><span class="line">    System.out.println(<span class="string">&quot;你的成绩属于及格&quot;</span>); </span><br><span class="line"> &#125;<span class="keyword">else</span> &#123; </span><br><span class="line">    System.out.println(<span class="string">&quot;你的成绩属于不及格&quot;</span>); </span><br><span class="line">   		&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="if语句和三元运算符的互换">if语句和三元运算符的互换</h2>
<p>在某些简单的应用中，if语句是可以和三元运算符互换使用的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> a = <span class="number">10</span>; </span><br><span class="line"> <span class="keyword">int</span> b = <span class="number">20</span>; </span><br><span class="line"> <span class="comment">//定义变量，保存a和b的较大值 </span></span><br><span class="line"> <span class="keyword">int</span> c; </span><br><span class="line"> <span class="keyword">if</span>(a &gt; b) &#123; </span><br><span class="line"> 	c = a; </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; </span><br><span class="line"> 	c = b; </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//可以上述功能改写为三元运算符形式 </span></span><br><span class="line"> c = a &gt; b ? a:b; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实例-判断三角形为什么三角形">实例 判断三角形为什么三角形</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">triangle</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;<span class="number">0</span>&amp;&amp;b&gt;<span class="number">0</span>&amp;&amp;c&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((a+b)&gt;c&amp;(a+c)&gt;b&amp;(c+b)&gt;a)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a == b &amp;&amp; b== c &amp;&amp; a==c)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;是等边三角形&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (a == a | b == c | b == c)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;是等腰三角形&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;是三角形&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不是三角形&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;边长不能为零&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记1/基础语法</title>
    <url>/2022/04/19/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="java简单介绍">java简单介绍</h2>
<ul>
<li>
<p>1995年有sun公司推出</p>
</li>
<li>
<p>java跨平台原理：JVM //java虚拟机</p>
</li>
<li>
<p>JRE和JDK：</p>
<ul>
<li>JRE：Java Runtime Environment:Java运行时环境</li>
<li>JDK:  Java Development Kit:java开发工具包</li>
<li><img src="/.io//01.png" alt></li>
</ul>
</li>
<li>
<p>安装JDK</p>
<div class="bvideo">
    <a href="//www.bilibili.com/video/BV18J411W7cE" target="_blank">
        <div class="bvideo-box">
            <div class="bvideo-cover">
                <div class="cover-default"></div>
                <div class="bvideo-cover-layer" style="background-image:url(https://images.weserv.nl/?url=http://i2.hdslb.com/bfs/archive/5995317219a989a86a7aae50c9b746b01ab01403.png)">
                    <i class="icon-video"></i>
                </div>
                <span class="duration">69:16:41</span>
            </div>
            <div class="bvideo-info">
                <p class="title">黑马程序员全套Java教程_Java基础入门视频教程，零基础小白自学Java入门教程</p>
                <p class="card-status">
                    <span class="play-num">
                        <i class="fa fa-youtube-play"></i>
                        <span>1013.7万</span></span>
                    <span>
                        <i class="fa fa-list-alt"></i>
                        <span>21.6万</span></span></p>
                <div class="partition">
                    <label class="card-label">视频</label>
                    <label class="up-label"></label>
                    <label class="up-name">黑马程序员</label>
                </div>
                <div class="actions hide"></div>
            </div>
        </div>
    </a>
</div>
</li>
<li>
<p>配置path</p>
<div class="bvideo">
    <a href="//www.bilibili.com/video/BV18J411W7cE" target="_blank">
        <div class="bvideo-box">
            <div class="bvideo-cover">
                <div class="cover-default"></div>
                <div class="bvideo-cover-layer" style="background-image:url(https://images.weserv.nl/?url=http://i2.hdslb.com/bfs/archive/5995317219a989a86a7aae50c9b746b01ab01403.png)">
                    <i class="icon-video"></i>
                </div>
                <span class="duration">69:16:41</span>
            </div>
            <div class="bvideo-info">
                <p class="title">黑马程序员全套Java教程_Java基础入门视频教程，零基础小白自学Java入门教程</p>
                <p class="card-status">
                    <span class="play-num">
                        <i class="fa fa-youtube-play"></i>
                        <span>1013.7万</span></span>
                    <span>
                        <i class="fa fa-list-alt"></i>
                        <span>21.6万</span></span></p>
                <div class="partition">
                    <label class="card-label">视频</label>
                    <label class="up-label"></label>
                    <label class="up-name">黑马程序员</label>
                </div>
                <div class="actions hide"></div>
            </div>
        </div>
    </a>
</div>
</li>
<li>
<p>java程序开发运行流程</p>
<ul>
<li>编写程序</li>
<li>编译程序</li>
<li>运行程序</li>
</ul>
</li>
</ul>
<h2 id="基础语法">基础语法</h2>
<h3 id="注释：指定位置-说明性信息">注释：指定位置,说明性信息</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 单行注释： //注释信息</span><br><span class="line">- 多行注释： /*注释信息*/</span><br><span class="line">- 文档注释： /**注释信息*/</span><br></pre></td></tr></table></figure>
<h3 id="关键字：被java语言赋予特别含义的单词">关键字：被java语言赋予特别含义的单词</h3>
<ul>
<li>关键字的字母全部小写</li>
<li>常用代码编译器有颜色区分</li>
</ul>
<h3 id="常量：程序运行过程中其值不发生改变的量">常量：程序运行过程中其值不发生改变的量</h3>
<p><img src="https://img.php.cn/upload/image/476/250/423/1577353036290668.jpg" alt></p>
<h3 id="数据类型">数据类型</h3>
<ul>
<li>
<p>1B(字节)=8bit(位) 1KB=1024B</p>
<p><img src="https://img-blog.csdnimg.cn/20210510211229540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0lUX19sZWFybmluZw==,size_16,color_FFFFFF,t_70" alt></p>
<p><img src="https://img-blog.csdnimg.cn/20210510211744261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0lUX19sZWFybmluZw==,size_16,color_FFFFFF,t_70" alt="数据类型内存占用和取值范围"></p>
</li>
</ul>
<h3 id="变量：其值可以改变的量">变量：其值可以改变的量</h3>
<ul>
<li>数据类型变量名=变量值：int a = 10</li>
<li>main方法变量名不重复</li>
<li>long类型值太大数后面加l：long l = 1000000l</li>
<li>float类型值后面加f</li>
</ul>
<h3 id="标识符">标识符</h3>
<ul>
<li>由数字，字母，下划线，美元符号组成</li>
<li>不能以数字开头</li>
<li>不能是关键字</li>
<li>区分大小写</li>
<li>命名法
<ul>
<li>小驼峰准则：方法和变量   ：studentCount=0；</li>
<li>大驼峰准则：类 ：public class StudentInfomation;</li>
</ul>
</li>
</ul>
<h3 id="类型转换">类型转换</h3>
<ul>
<li>
<p>自动类型转换<br>
<img src="/.io//02.png" alt="表示数据范围从小到大"></p>
</li>
<li>
<p>强制类型转换：int k = (int)88.88</p>
</li>
</ul>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记10-面向对象基础</title>
    <url>/2022/05/05/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B010-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="类和对象">类和对象</h2>
<p><strong>类是对现实生活中一类具有<mark class="hl-label red">共同属性</mark> 和<mark class="hl-label red">行为</mark> 的事物的抽象</strong></p>
<p><strong>类的特点</strong></p>
<ul>
<li>类是对象的数据类型</li>
<li>类是具有相同属性和行为的一组对象的集合</li>
</ul>
<p>**属性：**对象具有的各种特征，每个对象的每个<mark class="hl-label red">属性</mark> 都拥有特定的<mark class="hl-label red">值</mark> </p>
<p>**行为：**对象能够执行的操作</p>
<h3 id="类和对象的关系">类和对象的关系</h3>
<ul>
<li>
<p>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</p>
</li>
<li>
<p>对象：是能够看的到摸得到的真实存在的实体</p>
</li>
<li>
<p>类是对象的抽象</p>
<p>对象是类的实体</p>
</li>
</ul>
<h3 id="类的定义">类的定义</h3>
<p>类的重要性：是java程序的基本组成单位</p>
<p>类是什么：是对现实生活中一类具有共同属性和行为的事物的抽象，确定对象将会拥有的属性和行为</p>
<p>类的组成：<strong>属性</strong>和<strong>行为</strong></p>
<ul>
<li>属性：在类中通过<strong>成员变量</strong>来体现（类中方法外的变量）</li>
<li>行为：在类中通过<strong>成员方法</strong>来体现（和前面的方法相比去掉static关键字即可）</li>
</ul>
<h3 id="类的定义步骤">类的定义步骤</h3>
<ol>
<li>
<p>定义类</p>
</li>
<li>
<p>编写类的成员变量</p>
</li>
<li>
<p>编写类的成员方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">	<span class="comment">//成员变量</span></span><br><span class="line">	变量<span class="number">1</span>的数据类型 变量<span class="number">1</span>;</span><br><span class="line">	变量<span class="number">2</span>的数据类型 变量<span class="number">2</span>;</span><br><span class="line">	....</span><br><span class="line">	<span class="comment">//成员方法</span></span><br><span class="line">	方法<span class="number">1</span>;</span><br><span class="line">	方法<span class="number">2</span>;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>案例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">phone</span> </span>&#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="keyword">int</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打电话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sanMassage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;发短息&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="对象的使用">对象的使用</h3>
<h4 id="创建对象">创建对象</h4>
<ul>
<li>格式：类型 对象名 = new 类名();</li>
<li>范例 Phone p = new Phone();</li>
</ul>
<h4 id="使用对象">使用对象</h4>
<ol>
<li>
<p>使用成员变量</p>
<ul>
<li>格式：对象名.变量名</li>
<li>范例：p.brand</li>
</ul>
</li>
<li>
<p>使用成员方法</p>
<ul>
<li>格式：对象名.方法名()</li>
<li>范例：p.call()</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Phone p = <span class="keyword">new</span> Phone();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量</span></span><br><span class="line">        System.out.println(p.brand);</span><br><span class="line">        System.out.println(p.price);</span><br><span class="line"></span><br><span class="line">        p.brand = <span class="string">&quot;iphone&quot;</span>;</span><br><span class="line">        p.price = <span class="number">12999</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(p.brand);</span><br><span class="line">        System.out.println(p.price);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        p.call();</span><br><span class="line">        p.sanMassage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果----------------------------</span><br><span class="line">    <span class="keyword">null</span></span><br><span class="line">	<span class="number">0</span></span><br><span class="line">	iphone</span><br><span class="line">	<span class="number">12999</span></span><br><span class="line">	打电话</span><br><span class="line">	发短息</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="案例">案例</h3>
<p>需求：首先定义一个学生类，然后定义一个学生测试类，在学生测试类中通过对象完成成员变量和成员方法的使用</p>
<p>思路：</p>
<ol>
<li>
<p>定义一个学生类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">类名：Student</span><br><span class="line">成员变量：name,age</span><br><span class="line">成员方法：study(),doHomework()</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>定义学生测试类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">类名：StudentDemo</span><br><span class="line">因为要做测试，所以有一个主方法：main方法</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在学生测试类中通过对象完成成员变量和成员方法的使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">给成员变量赋值，输出成员变量的值</span><br><span class="line">调用成员方法</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Student &#123;</span><br><span class="line">    //定义变量</span><br><span class="line">    String name;</span><br><span class="line">    int age;</span><br><span class="line"></span><br><span class="line">    //成员方法</span><br><span class="line">    public void study() &#123;</span><br><span class="line">        System.out.println(&quot;xuexi&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void doHomework() &#123;</span><br><span class="line">        System.out.println(&quot;xiezuoye&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="对象内存图">对象内存图</h2>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137911881&page=103" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<ul>
<li>
<p>输出内存名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class StudentDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //创建对象</span><br><span class="line">        Student s = new Student();</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        //使用对象</span><br><span class="line">        s.name = &quot;葡萄&quot;;</span><br><span class="line">        s.age = 19;</span><br><span class="line"></span><br><span class="line">        System.out.println(s.name + &quot;,&quot; + s.age);</span><br><span class="line"></span><br><span class="line">        //使用成员方法</span><br><span class="line">        s.study();</span><br><span class="line">        s.doHomework();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-----------------------------------</span><br><span class="line">    mianduiduixiang.test02.Student@1540e19d</span><br><span class="line">    葡萄,19</span><br><span class="line">    学习</span><br><span class="line">    做作业</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>多个对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">多个对象</span><br><span class="line"> */</span><br><span class="line">public class StudentDemo2 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //创建第一个对象并使用</span><br><span class="line">        Student s1 = new Student();</span><br><span class="line"></span><br><span class="line">        s1.name = &quot;葡萄&quot;;</span><br><span class="line">        s1.age = 19;</span><br><span class="line">        System.out.println(s1.name + &quot;,&quot; + s1.age);</span><br><span class="line"></span><br><span class="line">        s1.study();</span><br><span class="line">        s1.doHomework();</span><br><span class="line"></span><br><span class="line">        //创建第二个对象并使用</span><br><span class="line">        Student s2 = new Student();</span><br><span class="line"></span><br><span class="line">        s2.name = &quot;sesh&quot;;</span><br><span class="line">        s2.age = 5;</span><br><span class="line">        System.out.println(s2.name + &quot;,&quot; + s2.age);</span><br><span class="line"></span><br><span class="line">        s2.study();</span><br><span class="line">        s2.doHomework();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-----------------------------------</span><br><span class="line">    葡萄,19</span><br><span class="line">    学习</span><br><span class="line">    做作业</span><br><span class="line">    sesh,5</span><br><span class="line">    学习</span><br><span class="line">    做作业</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>多个对象指向相同</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class StudentDemo3 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //创建第一个对象并使用</span><br><span class="line">        Student s1 = new Student();</span><br><span class="line"></span><br><span class="line">        s1.name = &quot;菠萝&quot;;</span><br><span class="line">        s1.age = 20;</span><br><span class="line">        System.out.println(s1.name + &quot;,&quot; + s1.age);</span><br><span class="line"></span><br><span class="line">        //把第二个对象的地址赋值给第二个对象</span><br><span class="line">        Student s2 = s1;</span><br><span class="line"></span><br><span class="line">        s2.name = &quot;香蕉&quot;;</span><br><span class="line">        s2.age = 30;</span><br><span class="line">        System.out.println(s1.name + &quot;,&quot; + s1.age);</span><br><span class="line">        System.out.println(s2.name + &quot;,&quot; + s2.age);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果----------------------------------</span><br><span class="line">    菠萝,20</span><br><span class="line">    香蕉,30</span><br><span class="line">    香蕉,30</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="成员变量和局部变量">成员变量和局部变量</h2>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/05/7a7e54693e089ffd.png" alt="红色是成员变量，蓝色是局部变量"></p>
<h3 id="成员变量和局部变量区别">成员变量和局部变量区别</h3>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/05/ec738dd2321a7975.png" alt></p>
<h2 id="封装">封装</h2>
<h3 id="private关键字">private关键字</h3>
<ul>
<li>是一个权限修饰符</li>
<li>可以修饰成员（成员变量和成员方法）</li>
<li>作用是保护成员不被别的类使用，被<strong>private</strong>修饰的成员只在本类中才能访问</li>
</ul>
<p>针对<strong>private</strong>修饰的成员变量，如果需要被其他类使用，提供相应的操作</p>
<ul>
<li>
<p>提供“<strong>get变量名()</strong>”方法，用于获取成员变量的值，方法用<strong>public</strong>修饰</p>
</li>
<li>
<p>提供“<strong>set变量名()</strong>”方法，用于设置成员变量的值，方法用<strong>public</strong>修饰</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用private关键字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供get/set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// age = a;</span></span><br><span class="line">        <span class="keyword">if</span> (a &lt; <span class="number">0</span> || a &gt; <span class="number">120</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄有误&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            age = a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Student s = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给成员变量赋值</span></span><br><span class="line">        s.name = <span class="string">&quot;葡萄&quot;</span>;</span><br><span class="line">        s.setAge(-<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用show方法</span></span><br><span class="line">        s.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果--------------------------------</span><br><span class="line">    年龄有误</span><br><span class="line">    葡萄,<span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="案例-v2">案例</h3>
<ul>
<li>
<p>学生类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String n)</span> </span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name+<span class="string">&quot;,&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student s = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        s.setName(<span class="string">&quot;葡萄&quot;</span>);</span><br><span class="line">        s.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        s.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用get方法获取成员变量的值</span></span><br><span class="line">        System.out.println(s.getName()+<span class="string">&quot;----&quot;</span>+s.getAge());</span><br><span class="line">        System.out.println(s.getName()+<span class="string">&quot;,&quot;</span>+s.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果------------------------</span><br><span class="line">    葡萄,<span class="number">20</span></span><br><span class="line">    葡萄----<span class="number">20</span></span><br><span class="line">    葡萄,<span class="number">20</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="this关键字">this关键字</h3>
<ol>
<li>
<p>this修饰的变量用于指代成员变量</p>
<ul>
<li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是从成员变量</li>
<li>方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量</li>
</ul>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/05/a69ef4c8f1040430.png" alt></p>
</li>
<li>
<p>什么时候使用this呢？<strong>解决局部变量隐藏成员变量</strong></p>
</li>
<li>
<p>this：代表所在类的对象引用</p>
<ul>
<li>记住：方法被那个对象调用，this就代表那个对象</li>
</ul>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/05/32e53cff2cc341f0.png" alt></p>
</li>
</ol>
<h3 id="this内存原理">this内存原理</h3>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137912335&page=110" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<h3 id="封装-v2">封装</h3>
<ol>
<li>
<p><strong>封装概述</strong></p>
<p>是面向对象三大特征之一（<strong>封装，继承，多态</strong>）</p>
<p>是面向对象编程语言对客观世界的模拟，客观世界里成员变量都是隐藏在对象内部的，外界是无法直接操作的</p>
</li>
<li>
<p><strong>封装原则</strong></p>
<p>将类的某些信息隐藏在类的内部，不允许外部程序直接访问，而是通过该类的提供的方法来实现对隐藏信息的操作和访问成员变量<strong>private</strong>，提供对应的**getXxx()/setXxx()**方法</p>
</li>
<li>
<p><strong>封装好处</strong></p>
<p>通过方法来控制成员变量的操作，提高了代码的安全性</p>
<p>把代码用方法进行封装，提高了代码的复用性</p>
</li>
</ol>
<h2 id="构造方法">构造方法</h2>
<h3 id="构造方法概述">构造方法概述</h3>
<p>构造方法是一种特殊的方法</p>
<p>作用：创建对象</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/05/3ee974423489c110.png" alt></p>
<ul>
<li>
<p>格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">	修饰符 类名(参数)&#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>功能：主要是完成对象数据的初始化</p>
<h3 id="构造方法的注意事项">构造方法的注意事项</h3>
<ol>
<li>构造方法的创建
<ul>
<li>如果没有定义构造方法，系统将给出一个<strong>默认</strong>的<strong>无参数构造方法</strong></li>
<li>如果定义了构造方法，系统将不再提供默认的构造方法</li>
</ul>
</li>
<li>构造方法的重载
<ul>
<li>如果自定义了带参数构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法</li>
</ul>
</li>
<li>推荐的使用方式
<ul>
<li><strong>无论是否使用，都手工书写无参构造方法</strong></li>
</ul>
</li>
</ol>
<h3 id="案例-v3">案例</h3>
<ul>
<li>
<p>无参构造方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无参数构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Student s = <span class="keyword">new</span> Student();</span><br><span class="line">        s.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-----------------------------------</span><br><span class="line">    无参数构造方法</span><br><span class="line">	<span class="keyword">null</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>有参构造方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;葡萄&quot;</span>);</span><br><span class="line">        s2.show();</span><br><span class="line"></span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student(<span class="number">20</span>);</span><br><span class="line">        s3.show();</span><br><span class="line"></span><br><span class="line">        Student s4 = <span class="keyword">new</span> Student(<span class="string">&quot;葡萄&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        s4.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果---------------------------------</span><br><span class="line">    <span class="keyword">null</span>,<span class="number">0</span></span><br><span class="line">    葡萄,<span class="number">0</span></span><br><span class="line">    <span class="keyword">null</span>,<span class="number">20</span></span><br><span class="line">    葡萄,<span class="number">20</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="标准类制作">标准类制作</h3>
<ol>
<li>成员变量
<ul>
<li>使用<strong>private</strong></li>
</ul>
</li>
<li>构造方法
<ul>
<li>提供一个无参构造方法</li>
<li>提供一个带多个参数的构造方法</li>
</ul>
</li>
<li>成员方法
<ul>
<li>提供每一个成员变量对应的**getXxx()/setXxx()**方法</li>
<li>提供一个显示对象信息的<strong>show()</strong></li>
</ul>
</li>
<li>创建对象并为其成员变量赋值的两种方式
<ul>
<li>无参构造方法创建对象后使用**setXxx()**赋值</li>
<li>使用带参数构造方法直接创建带有属性值的对象</li>
</ul>
</li>
</ol>
<h3 id="范例">范例</h3>
<ul>
<li>
<p>类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        s1.setName(<span class="string">&quot;葡萄&quot;</span>);</span><br><span class="line">        s1.setAge(<span class="number">19</span>);</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用带参数构造方法直接创建带有属性值的对象</span></span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;葡萄&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        s2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-------------------------------</span><br><span class="line">    葡萄,<span class="number">19</span></span><br><span class="line">	葡萄,<span class="number">20</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记11-字符串</title>
    <url>/2022/05/21/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B011-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="API">API</h2>
<h3 id="API概述">API概述</h3>
<p><strong>API</strong>(<strong>A</strong>pplication <strong>P</strong>rogramming <strong>I</strong>nterface)：应用程序编程接口</p>
<p>Java API ：指的就是 JDK 中提供的各种功能的 Java类</p>
<p>这些类将底层的实现封装了起来，我们不需要关心这些类是如何实现的，只需要学习这些类如何使用即可，我们可以通过帮助文档来学习这些API如何使用</p>
<h3 id="API-使用练习">API 使用练习</h3>
<p>注意：调用方法的时候，如果方法有明确的返回值，我们用变量接收</p>
<p>可以手动完成，也可以使用快捷键的方式完成（Ctrl + Alr + V）</p>
<h2 id="String">String</h2>
<h3 id="String-概述">String 概述</h3>
<p>String类在 <strong>java.lang</strong> 包下，所以使用的时候不需要导包</p>
<p><strong>String</strong>类代表<strong>字符串</strong>，Java程序中的所有字符串文字（类如“abc”）都被实现为此类的实例</p>
<p>也就是说，<strong>java程序中所有的双引号字符串，都是String类的对象</strong></p>
<h3 id="字符串的特点">字符串的特点</h3>
<ul>
<li>字符串不可变，他们的值在创建后不能被更改</li>
<li>虽然 String 的值是不可变的，但是他们可以被共享</li>
<li>字符串效果上相当于字符串组（char[]）<code>JDK8以前是字符数组，JDK9及以后是字节数组</code>，但是底层原理是字节数组（byte[]）</li>
</ul>
<h3 id="String构造方法">String构造方法</h3>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/21/fdfe35d542217be4.png" alt></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 推荐使用直接赋值的方式得到字符串对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stringtest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//public String(); 创建一个空白字符串对象，不含有任何内容</span></span><br><span class="line">        String s1 = <span class="keyword">new</span> String();</span><br><span class="line">        System.out.println(<span class="string">&quot;s1:&quot;</span>+s1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public String(char[] chs); 根据字符数组的内容，来创建字符串对象</span></span><br><span class="line">        <span class="keyword">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(chs);</span><br><span class="line">        System.out.println(<span class="string">&quot;s2:&quot;</span>+s2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public String(byte[] bys); 根据字节数组的内容，来创建字符串对象</span></span><br><span class="line">        <span class="keyword">byte</span>[] bys  = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>&#125;;</span><br><span class="line">        String s3 = <span class="keyword">new</span> String(bys);</span><br><span class="line">        System.out.println(<span class="string">&quot;s3:&quot;</span>+s3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//String s = &quot;abc&quot;;直接赋值的方式创建字符串对象，内容就是abc</span></span><br><span class="line">        String s4 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;s4:&quot;</span>+ s4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果---------------------</span><br><span class="line">    s1:</span><br><span class="line">	s2:abc</span><br><span class="line">	s3:abc</span><br><span class="line">	s4:abc</span><br></pre></td></tr></table></figure>
<h3 id="String对象的特点">String对象的特点</h3>
<ol>
<li>
<p>通过 new 创建的字符串对象，每一次 new 都会申请一个内存空间，虽然内容相同，但是地址值不同</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span>[] chs = (<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">String s1 = <span class="keyword">new</span> String(chs)</span><br><span class="line">String s2 = <span class="keyword">new</span> String(chs)</span><br></pre></td></tr></table></figure>
<p>双面的代码中，JVM会首先创建一个字符数组，然后每一次new的时候都会有一个新的地址，只不过s1和s2参考的字符串内容是相同的</p>
</li>
<li>
<p>以 “” 方式给出的字符串，只要字符串序列相同（顺序和大小写），无论在程序代码中出现几次，JVM都只会建立一个String对象，并在字符串池中维护</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s3 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">String s4 = <span class="string">&quot;abc&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>在上面的代码中，针对第一行代码，JVM会建立一个String对象放在字符串池中，并给s3参考；</p>
<p>第二行则让s4直接参考字符串池中的String对象，也就是说他们本质上是同一个对象</p>
</li>
</ol>
<h3 id="字符串的比较">字符串的比较</h3>
<p>使用 == 作比较</p>
<ul>
<li>基本类型：比较的是<strong>数组值</strong>是否相同</li>
<li>引用类型：比较的是<strong>地址值</strong>是否相同</li>
</ul>
<p>字符串是对象，它比较内容是否相同，是通过一个方法来实现的，这个方法叫：<strong>equals()</strong></p>
<ul>
<li>
<p>public boolean equals(Object anObject)：将此字符串与指定对象进行比较。由于我们比较的是字符串对象，所以参数直接传递一第一个字符</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//构造方法的方式得到对象</span></span><br><span class="line">        <span class="keyword">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        String s1 = <span class="keyword">new</span> String(chs);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(chs);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//直接赋值的方式得到对象</span></span><br><span class="line">        String s3 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        String s4 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比较字符串对象地址是否相同</span></span><br><span class="line">        System.out.println(s1 == s2);</span><br><span class="line">        System.out.println(s1 == s3);</span><br><span class="line">        System.out.println(s3 == s4);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比较字符串内容是否相同</span></span><br><span class="line">        System.out.println(s1.equals(s2));</span><br><span class="line">        System.out.println(s1.equals(s3));</span><br><span class="line">        System.out.println(s3.equals(s4));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果------------------------</span><br><span class="line">    <span class="keyword">false</span></span><br><span class="line">    <span class="keyword">false</span></span><br><span class="line">    <span class="keyword">true</span></span><br><span class="line">    ------------------</span><br><span class="line">    <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">true</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="通过帮助文档查看String中的方法">通过帮助文档查看String中的方法</h3>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/21/58b4049d3e0e7a04.png" alt></p>
<h2 id="案例">案例</h2>
<h3 id="用户登录">用户登录</h3>
<p>需求：已知用户名和密码，请用程序实现模拟用户登录，总共给三次机会，登录之后，给出相应的提示</p>
<p>思路：</p>
<ol>
<li>
<p>已知用户名和密码，定义两个字符串表示即可</p>
</li>
<li>
<p>键盘录入要登陆的用户名和密码，用<strong>Scanner</strong>实现</p>
</li>
<li>
<p>拿键盘录入的用户名，密码和已知的用户名，密码进行比较，给出相应的提示。字符串的内容比较，用**equals()**方法实现</p>
</li>
<li>
<p>用循环实现多次机会，这里的次数明确，采用<strong>for</strong>循环实现，并在登录成功的时候，使用<strong>break</strong>结束循环</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//已知用户名和密码，定义两个字符串表示即可</span></span><br><span class="line">        String username = <span class="string">&quot;grape&quot;</span>;</span><br><span class="line">        String passwd = <span class="string">&quot;1234&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用循环实现多次机会，这里的次数明确，采用for循环实现，并在登录成功的时候，使用break结束循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//键盘录入要登陆的用户名和密码，用Scanner实现</span></span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名&quot;</span>);</span><br><span class="line">            String name = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">            String pwd = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//拿键盘录入的用户名，密码和已知的用户名，密码进行比较，给出相应的提示。字符串的内容比较，用equals()方法实现</span></span><br><span class="line">            <span class="keyword">if</span> (name.equals(username) &amp;&amp; pwd.equals(passwd)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">2</span> - i == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;你的账户被锁定，请与管理员联系&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;登录失败，你还有&quot;</span>+ (<span class="number">2</span>-i) +<span class="string">&quot;次机会&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="遍历字符串">遍历字符串</h3>
<p>需求：键盘录入一个字符串，使用程序实现在控制台遍历该字符串</p>
<p>思路：</p>
<ol>
<li>
<p>键盘录入一个字符串，用Scanner实现</p>
</li>
<li>
<p>遍历字符串，首先要能够获取到字符串中的每一个字符</p>
<ul>
<li>public char charAt（int index）：返回指定索引处的char值，字符串的索引也是从0开始的</li>
</ul>
</li>
<li>
<p>遍历字符串，其次要能够获取到字符串的长度</p>
<ul>
<li>
<p>public int <strong>length()</strong>：返回此字符串的长度</p>
</li>
<li>
<p>数组的长度：数组名.length</p>
</li>
</ul>
</li>
<li>
<p>遍历字符串的通用格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.;lenght(); i++)&#123;</span><br><span class="line">	s.charAt(i);  <span class="comment">//就是指定索引处的字符值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入一个字符串，用Scanner实现</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">        String line = sc.nextLine();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* //遍历字符串，首先要能够获取到字符串中的每一个字符</span></span><br><span class="line"><span class="comment">        System.out.println(line.charAt(0));</span></span><br><span class="line"><span class="comment">        System.out.println(line.charAt(1));</span></span><br><span class="line"><span class="comment">        System.out.println(line.charAt(2));*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;line.length(); i++)&#123;</span><br><span class="line">            System.out.println(line.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="统计字符次数">统计字符次数</h3>
<p>需求：键盘录入一个字符串，统计该字符串中大写字符，小写字符，数字字符出现的次数（不考虑其他字符）</p>
<p>思路：</p>
<ol>
<li>
<p>键盘录入一个字符串，用Scanner实现</p>
</li>
<li>
<p>要统计三种类型的字符个数，需定义三个统计变量，初始值都为0</p>
</li>
<li>
<p>遍历字符串，得到每一个字符</p>
</li>
<li>
<p>判断该字符属于哪种类型，然后对应类型的统计变量+1</p>
<p>假如ch是一个字符，我要判断它属于大写字母，小写字母，还是数字，直接判断该字符是否在对应的范围即可</p>
<ul>
<li>大写字母：ch&gt;=‘A’ &amp;&amp; ch&lt;=‘Z’</li>
<li>小写字母：ch&gt;=‘a’ &amp;&amp; ch&lt;=‘z’</li>
<li>数字：ch&gt;=‘0’ &amp;&amp; ch&lt;=‘9’</li>
</ul>
</li>
<li>
<p>输出三种类型的字符个数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入一个字符串，用Scanner实现</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">        String line = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//要统计三种类型的字符串个数，需定义三个统计变量，初始值都为0</span></span><br><span class="line">        <span class="keyword">int</span> bigCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> smallCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> numberCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历字符串，得到每一个字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;line.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch = line.charAt(i);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断该字符属于哪种类型，然后对应类型的统计变量+1</span></span><br><span class="line">            <span class="keyword">if</span> (ch&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">                bigCount++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">                smallCount++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">                numberCount++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出三种类型的字符个数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;大写字母：&quot;</span>+bigCount+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小写字母：&quot;</span>+smallCount+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;数字：&quot;</span>+numberCount+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="拼接字符串">拼接字符串</h3>
<p>需求：定义一个方法，把int数组中的数据按照指定的格式拼接成一个字符串返回，调用该方法，并在控制台输出结果。例如，数组为int[] arr = {1,2,3};,执行方法后的输出结果为：[1,2,3]</p>
<p>思路：</p>
<ol>
<li>
<p>定义一个int类型的数组，用静态初始化完成数组元素的初始化</p>
</li>
<li>
<p>定义一个方法，用于把int数组中的书数据按照指定格式拼接成一个字符串返回，返回值类型<strong>String</strong>，参数列表<strong>int[] arr</strong></p>
</li>
<li>
<p>在方法中遍历数组，按照要求进行拼接</p>
</li>
<li>
<p>调用方法，用一个变量接收结果</p>
</li>
<li>
<p>输出结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 定义一个int类型的数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用方法，用一个变量接收结果</span></span><br><span class="line">        String s = arrayToString(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s:&quot;</span> + s);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个方法，用于把int数组中的书数据按照指定格式拼接成一个字符串返回，返回值类型String，参数列表int[] arr</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：String</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">arrayToString</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在方法中遍历数组，按照要求进行拼接</span></span><br><span class="line">        String s = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        s += <span class="string">&quot;[&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                s += arr[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                s += arr[i];</span><br><span class="line">                s += <span class="string">&quot;,&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        s += <span class="string">&quot;]&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="字符串反转">字符串反转</h3>
<p>需求：定义一个方法，实现字符串反转，键盘录入一个字符串，调用该方法后，在控制台输出结果</p>
<p>例如：键盘录入abc，输出结果cba</p>
<p>思路：</p>
<ol>
<li>
<p>键盘录入一个字符串，用<strong>Scanner</strong>实现</p>
</li>
<li>
<p>定义一个方法，实现字符串反转，返回值类型<strong>String</strong>，参数<strong>String s</strong></p>
</li>
<li>
<p>在方法中把字符串倒着遍历，然后把每一个得到的字符拼接成一个字符串并返回</p>
</li>
<li>
<p>调用方法，用一个变量接收结果</p>
</li>
<li>
<p>输出结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest7</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入一个字符串，用Scanner实现</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">        String line = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法，用一个变量接收结果</span></span><br><span class="line">        String s = reverse(line);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s:&quot;</span> + s);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，实现字符串反转</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：String</span></span><br><span class="line"><span class="comment">            参数：String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">reverse</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在方法中把字符串倒着遍历，然后把每一个得到的字符拼接成一个字符串并返回</span></span><br><span class="line">        String ss = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = s.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            ss += s.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ss;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="StringBuilder">StringBuilder</h2>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137913265&page=127" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<h3 id="StringBuilder概述">StringBuilder概述</h3>
<p>StringBuilder是一个可变的字符串类，我们可以把它看成一个容器这里的可变指的是StringBuilder对象中的内容是可变的、</p>
<p><strong>String和StringBuilder的区别：</strong></p>
<ul>
<li>String：内容是不可变的</li>
<li>StringBuilder：内容是可变的</li>
</ul>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记2-算术运算符</title>
    <url>/2022/04/26/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="算术运算符">算术运算符</h2>
<ol>
<li>
<p>运算符和表达式<code>+</code>,<code>a+b</code></p>
</li>
<li>
<p>+（加）-（减）*（乘） /（除）%（取余）</p>
<p>/和%的区别：两个数据做除法，/取结果的商，%取结果的余数。<br>
整数操作只能得到整数，要想得到小数，必须有浮点数参与运算。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    ``算术运算符</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">suanshu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] arge)</span></span>&#123;</span><br><span class="line">        <span class="comment">//定义两个变量</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">4</span>;</span><br><span class="line">        System.out.println(a + b);</span><br><span class="line">        System.out.println(a - b);</span><br><span class="line">        System.out.println(a * b);</span><br><span class="line">        System.out.println(a / b);</span><br><span class="line">        System.out.println(a % b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//除法得到的是商，取余得到的是余数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//整数相除只能得到整数，要想得到小数，必须有浮点数的参与</span></span><br><span class="line">        System.out.println(<span class="number">6.0</span> / <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-------------</span><br><span class="line">	<span class="number">10</span></span><br><span class="line">	<span class="number">2</span></span><br><span class="line">	<span class="number">24</span></span><br><span class="line">	<span class="number">1</span></span><br><span class="line">	<span class="number">2</span></span><br><span class="line">	<span class="number">1.5</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>
<p>字符的“+”操作</p>
<p>拿字符在计算机底层对应的数值来进行计算的</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jiahao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] arge)</span></span>&#123;</span><br><span class="line">        <span class="comment">//定义两个变量</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;A&#x27;</span>; <span class="comment">//字符“A”的值是65</span></span><br><span class="line">        c = <span class="string">&#x27;a&#x27;</span>; <span class="comment">//字符‘a’的值是95</span></span><br><span class="line">        c = <span class="string">&#x27;0&#x27;</span>; <span class="comment">//‘0’的值是48</span></span><br><span class="line">        System.out.println(i + c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//char ch = 1 + c;</span></span><br><span class="line">        <span class="comment">//char类型会被自动提升为int类型</span></span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span> + c;</span><br><span class="line">        System.out.println(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-----------</span><br><span class="line">    <span class="number">58</span></span><br><span class="line">    <span class="number">49</span></span><br></pre></td></tr></table></figure>
<p>算术表达式中包含多个基本数据类型的值的时候，整个算术表达式的类型会自动进行提升</p>
<p>提升规则：</p>
<p>byte类型，short类型和char类型将被提升到int类型</p>
<p>整个表达式的类型自动提升到表达式中最高等级操作数同样的类型</p>
<p>等级顺序：byte，short，char→int→long→float→double</p>
<ol start="4">
<li>
<p>字符串+数字</p>
<p>当“+”操作中出现字符串时，这个“+”是字符串连接符，而不是算术运算。</p>
<p>“ityinzhuang”+666</p>
<p>在“+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操作时，从左到右逐个执行。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jiashuzi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;pen&quot;</span>+<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;pen&quot;</span>+<span class="string">&quot;8&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;8&quot;</span>+<span class="string">&quot;pen&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;apple&quot;</span>+<span class="number">5</span>+<span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span>+<span class="number">5</span>+<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果------------</span><br><span class="line">    penapple</span><br><span class="line">	pen8</span><br><span class="line">	8pen</span><br><span class="line">	apple55</span><br><span class="line">	10apple</span><br></pre></td></tr></table></figure>
<h2 id="赋值运算符">赋值运算符</h2>
<table>
<thead>
<tr>
<th>运算符</th>
<th>含义</th>
<th>实例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>+=</td>
<td>将该运算符左边的数值加上右边的数值， 其结果赋值给左边变量本身</td>
<td>int a=5; a+=2等价于a=a+2</td>
<td>a=7</td>
</tr>
<tr>
<td>-=</td>
<td>将该运算符左边的数值减去右边的数值， 其结果赋值给左边变量本身</td>
<td>int a=5; a-=2等价于a=a-2</td>
<td>a=3</td>
</tr>
<tr>
<td>*=</td>
<td>将该运算符左边的数值乘以右边的数值， 其结果赋值给左边变量本身</td>
<td>int a=5; a*=2等价于a=a*2</td>
<td>a=10</td>
</tr>
<tr>
<td>/=</td>
<td>将该运算符左边的数值整除右边的数值， 其结果赋值给左边变量本身</td>
<td>int a=5; a/=2等价于a=a/2</td>
<td>a=2</td>
</tr>
<tr>
<td>%=</td>
<td>将该运算符左边的数值除以右边的数值后取余，其结果赋值给左边变量本身</td>
<td>int a=5; a%=2等价于a=a%2</td>
<td>a=1</td>
</tr>
</tbody>
</table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class fuzhi &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int a = 5;</span><br><span class="line">        int b = 10;</span><br><span class="line">        int c;</span><br><span class="line">        c = a;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        c += a;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        c += 50;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-------------------</span><br><span class="line">	5</span><br><span class="line">	10</span><br><span class="line">	60</span><br></pre></td></tr></table></figure>
<ul>
<li>隐含了强制的类型转换</li>
</ul>
<h2 id="自增自减运算符">自增自减运算符</h2>
<ul>
<li>++和–运算符可以放在变量之前，也可以放在变量之后，当运算符放在变量之前时(前缀)，先自增/减，再赋值；当运算符放在变量之后时(后缀)，先赋值，再自增/减</li>
<li>例如，当 b = ++a 时，先自增（自己增加 1），再赋值（赋值给 b）；当 b = a++ 时，先赋值(赋值给 b)，再自增（自己增加 1）。也就是，++a 输出的是 a+1 的值，a++输出的是 a 本身值</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">       <span class="keyword">int</span> b,c;</span><br><span class="line">       b = a++;</span><br><span class="line">       System.out.println(b); <span class="comment">//此时a已经加1</span></span><br><span class="line">       c = ++a;</span><br><span class="line">       System.out.println(c);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果------------</span><br><span class="line">   <span class="number">10</span></span><br><span class="line">   <span class="number">12</span></span><br></pre></td></tr></table></figure>
<h2 id="关系运算符">关系运算符</h2>
<table>
<thead>
<tr>
<th style="text-align:left">运算符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">==</td>
<td style="text-align:left">检查如果两个操作数的值是否相等，如果<code>相等</code>则条件为true。</td>
</tr>
<tr>
<td style="text-align:left">!=</td>
<td style="text-align:left">检查如果两个操作数的值是否相等，如果值<code>不相等</code>则条件为true。</td>
</tr>
<tr>
<td style="text-align:left">&gt;</td>
<td style="text-align:left">检查左操作数的值是否大于右操作数的值，如果是那么条件为true。</td>
</tr>
<tr>
<td style="text-align:left">&lt;</td>
<td style="text-align:left">检查左操作数的值是否小于右操作数的值，如果是那么条件为true。</td>
</tr>
<tr>
<td style="text-align:left">&gt;=</td>
<td style="text-align:left">检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为true。</td>
</tr>
<tr>
<td style="text-align:left">&lt;=</td>
<td style="text-align:left">检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为true。</td>
</tr>
</tbody>
</table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">guanxi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="number">5</span>==<span class="number">6</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span>!=<span class="number">6</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span>&gt;<span class="number">6</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span>&gt;=<span class="number">6</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span>&lt;<span class="number">6</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span>&lt;=<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果----------------</span><br><span class="line">    <span class="keyword">false</span></span><br><span class="line">	<span class="keyword">true</span></span><br><span class="line">	<span class="keyword">false</span></span><br><span class="line">	<span class="keyword">false</span></span><br><span class="line">	<span class="keyword">true</span></span><br><span class="line">	<span class="keyword">true</span></span><br></pre></td></tr></table></figure>
<h2 id="逻辑运算符">逻辑运算符</h2>
<ul>
<li>
<p><code>&amp;、|、^、!、&amp;&amp;、||</code></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/a44b69649f42067c3ee0efea63833b57.png" alt="image.png"><br>
<img src="https://img-blog.csdnimg.cn/img_convert/cd8f07da845b514b2f3dfae3f02bd48a.png" alt="image.png"></p>
<ol>
<li>
<p>&amp;&amp;:与，前后两个操作数必须都是true才返回true，否则返回false。</p>
</li>
<li>
<p>&amp;:不短路与，作用与&amp;&amp;相同，但不会短路。</p>
</li>
<li>
<p>||：或，只要两个操作数中有一个是true，就可以返回true，否则返回false。</p>
</li>
<li>
<p>|不短路或，作用与||相同，但不会短路。</p>
</li>
<li>
<p>!:非，只需要一个操作数，如果操作数为true,则返回false;如果操作数为false，则返回true。</p>
</li>
<li>
<p>^:异或，当两个操作数不同时才返回true,如果两个操作数相同则返false.</p>
</li>
</ol>
</li>
<li>
<p>&amp;&amp;与&amp;，||与｜的区别</p>
<ol>
<li>&amp;&amp;和&amp;都是表示与，区别是&amp;&amp;只要有一个条件不一样就是不满足，如果第一个条件就是不满足就不判断后面的条件。而&amp;要对所有的条件都进行判断。</li>
<li>||和|都是表示“或”，区别是||只要满足第一个条件，后面的条件就不再判断，而|要对所有的条件进行判断。</li>
</ol>
</li>
</ul>
<h3 id="代码演示">代码演示</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义变量</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &amp;：有 false 则为 false</span></span><br><span class="line">    System.out.println((i &gt; j) &amp; (i &gt; k)); <span class="comment">// false &amp; false = false</span></span><br><span class="line">    System.out.println((i &lt; j) &amp; (i &gt; k)); <span class="comment">// true &amp; false = false</span></span><br><span class="line">    System.out.println((i &gt; j) &amp; (i &lt; k)); <span class="comment">// false &amp; ture = false</span></span><br><span class="line">    System.out.println((i &lt; j) &amp; (i &lt; k)); <span class="comment">// ture &amp; ture = ture</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// |：有 true 则为 true</span></span><br><span class="line">    System.out.println((i &gt; j) | (i &gt; k)); <span class="comment">// false | false = false</span></span><br><span class="line">    System.out.println((i &lt; j) | (i &gt; k)); <span class="comment">// true | false = ture</span></span><br><span class="line">    System.out.println((i &gt; j) | (i &lt; k)); <span class="comment">// false | ture = ture</span></span><br><span class="line">    System.out.println((i &lt; j) | (i &lt; k)); <span class="comment">// ture | ture = ture</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ^：结果相同为 false，不同为 true</span></span><br><span class="line">    System.out.println((i &gt; j) ^ (i &gt; k)); <span class="comment">// false ^ false = true</span></span><br><span class="line">    System.out.println((i &lt; j) ^ (i &gt; k)); <span class="comment">// true ^ false = ture</span></span><br><span class="line">    System.out.println((i &gt; j) ^ (i &lt; k)); <span class="comment">// false ^ ture = ture</span></span><br><span class="line">    System.out.println((i &lt; j) ^ (i &lt; k)); <span class="comment">// ture ^ ture = false</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// !：结果相同为 false，不同为 true</span></span><br><span class="line">    System.out.println((i &gt; j)); <span class="comment">// false = false</span></span><br><span class="line">    System.out.println(!(i &lt; j)); <span class="comment">// !false = true</span></span><br><span class="line">    System.out.println(!!(i &gt; j)); <span class="comment">// !!false = false</span></span><br><span class="line">    System.out.println(!!!(i &lt; j)); <span class="comment">// !!!false = ture</span></span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">boolean</span> boo1 = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">boolean</span> boo2 = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;a &amp;&amp; b = &quot;</span> + (boo1 &amp;&amp; boo2));</span><br><span class="line">System.out.println(<span class="string">&quot;a &amp; b = &quot;</span> + (boo1 &amp;&amp; boo2));</span><br><span class="line">		</span><br><span class="line">System.out.println(<span class="string">&quot;a || b = &quot;</span> + (boo1 || boo2));</span><br><span class="line">System.out.println(<span class="string">&quot;a | b = &quot;</span> + (boo1 | boo2));</span><br><span class="line">		</span><br><span class="line">System.out.println(<span class="string">&quot;!(a &amp;&amp; b) = &quot;</span> + !(boo1 &amp;&amp;boo2));		</span><br><span class="line">		</span><br><span class="line">System.out.println(<span class="string">&quot;^(a &amp;&amp; b) = &quot;</span> + (boo1 ^ boo2));	</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200428014805692.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDU0NzQxOA==,size_16,color_FFFFFF,t_70#pic_center" alt></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">算法说明：</span><br><span class="line"></span><br><span class="line">首先第一题的结果是false,是因为前后的操作数必须都是true才返回true，否则返回false，所以返回false。</span><br><span class="line"></span><br><span class="line">第二题的意思和第一题的也是一样。</span><br><span class="line"></span><br><span class="line">第三题的结果是true，是因为boo1是true，boo2是false,在看看逻辑运算符的意思就知道结果，必须两个操作数中有一个是true，就可以返回true，否则返回false。</span><br><span class="line"></span><br><span class="line">第四题的意思和第三题的也是一样。</span><br><span class="line"></span><br><span class="line">第五题的结果是true,是因为题目写的是 !(boo1 &amp;&amp; boo2)，括号里面是等于false，然后外面又加了“!”运算符，所以结果是true。</span><br><span class="line">意思是操作数为true,则返回false;如果操作数为false，则返回true，简单的意思就是反着来，是true为false，是false为true。</span><br><span class="line"></span><br><span class="line">第六题的结果也是true，是因为题目写的是boo1 ^ boo2，所以两个值不同才返回true，相同的就返回false。</span><br></pre></td></tr></table></figure>
<h2 id="三元运算符">三元运算符</h2>
<ul>
<li>
<p>语法：条件表达式？表达式1：表达式2；</p>
</li>
<li>
<p><strong>运算规则：</strong></p>
<ol>
<li>
<p>如果条件表达式为true，运算后的结果是表达式1；</p>
</li>
<li>
<p>如果条件表达式为false，运算后的结果是表达式2；</p>
</li>
</ol>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sanyuan</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">       <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">       <span class="keyword">int</span> c = <span class="number">2</span>;</span><br><span class="line">       <span class="keyword">int</span> max = a &gt; b ? a : b;</span><br><span class="line">       <span class="keyword">int</span> max1 = max &gt; c ? max : c;</span><br><span class="line">       System.out.println(<span class="string">&quot;最大值为&quot;</span>+max1);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记3-数据输入</title>
    <url>/2022/04/26/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-%E6%95%B0%E6%8D%AE%E8%BE%93%E5%85%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="数据输入">数据输入</h2>
<p><strong>Scanner使用的基本步骤</strong></p>
<ol>
<li>导包</li>
</ol>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>创建对象</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">//只有sc是变量名可以变其他的都不许变</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>接收数据</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = sc.nextInt();</span><br><span class="line">        <span class="comment">//只有i是变量名</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>案例</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shujvshuru</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner a = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//只有sc是变量名可以变其他的都不许变</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个人的高度&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i1 = a.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个人的高度&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i2 = a.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个人的高度&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i3 = a.nextInt();</span><br><span class="line">        <span class="comment">//只有i是变量名</span></span><br><span class="line">        <span class="keyword">int</span> max = i1 &gt; i2 ? i1 : i2;</span><br><span class="line">        <span class="keyword">int</span> max1 = max &gt; i3 ? max : i3;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为&quot;</span>+max1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记4-分支语句</title>
    <url>/2022/04/27/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="if语句">if语句</h2>
<h3 id="if">if</h3>
<ul>
<li>if语句第一种格式： if</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(关系表达式)｛ </span><br><span class="line">	语句体; </span><br><span class="line">｝</span><br></pre></td></tr></table></figure>
<ul>
<li>执行流程
<ul>
<li>首先判断关系表达式看其结果是true还是false</li>
<li>如果是true就执行语句体</li>
<li>如果是false就不执行语句体</li>
</ul>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200919211142140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvdWdoQ1k=,size_16,color_FFFFFF,t_70#pic_center" alt></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123; </span><br><span class="line">	System.out.println(<span class="string">&quot;开始&quot;</span>); </span><br><span class="line">	<span class="comment">// 定义两个变量 </span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>; </span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="comment">//变量使用if判断 </span></span><br><span class="line">	<span class="keyword">if</span> (a == b)&#123; </span><br><span class="line">		System.out.println(<span class="string">&quot;a等于b&quot;</span>); </span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">int</span> c = <span class="number">10</span>; </span><br><span class="line">	<span class="keyword">if</span>(a == c)&#123; </span><br><span class="line">		System.out.println(<span class="string">&quot;a等于c&quot;</span>); </span><br><span class="line">		&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;结束&quot;</span>); </span><br><span class="line">	｝</span><br></pre></td></tr></table></figure>
<h3 id="if…else">if…else</h3>
<ul>
<li>if语句第二种格式： if…else</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(关系表达式) &#123;</span><br><span class="line"> 	语句体<span class="number">1</span>; </span><br><span class="line"> &#125;<span class="keyword">else</span> &#123; </span><br><span class="line"> 	语句体<span class="number">2</span>; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>执行流程</p>
<ul>
<li>
<p>首先判断关系表达式看其结果是true还是false</p>
</li>
<li>
<p>如果是true就执行语句体1</p>
</li>
<li>
<p>如果是false就执行语句体2</p>
<p><img src="https://img-blog.csdnimg.cn/20200919212243501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvdWdoQ1k=,size_16,color_FFFFFF,t_70#pic_center" alt></p>
</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123; </span><br><span class="line">	<span class="comment">// 判断给定的数据是奇数还是偶数 </span></span><br><span class="line">	<span class="comment">// 定义变量 </span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">1</span>; </span><br><span class="line">	<span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span>) &#123; </span><br><span class="line">		System.out.println(<span class="string">&quot;a是偶数&quot;</span>);</span><br><span class="line">	 &#125; <span class="keyword">else</span>&#123; </span><br><span class="line">	 	System.out.println(<span class="string">&quot;a是奇数&quot;</span>); </span><br><span class="line">	 &#125;</span><br><span class="line">	 System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="if…else-if…else">if…else if…else</h3>
<ul>
<li>if语句第三种格式： if…else if …else</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (判断条件<span class="number">1</span>) &#123; </span><br><span class="line">	执行语句<span class="number">1</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (判断条件<span class="number">2</span>) &#123;</span><br><span class="line"> 	执行语句<span class="number">2</span>; </span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (判断条件n) &#123; </span><br><span class="line">  	执行语句n; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">  	执行语句n+<span class="number">1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>执行流程<br>
首先判断关系表达式1看其结果是true还是false<br>
如果是true就执行语句体1<br>
如果是false就继续判断关系表达式2看其结果是true还是false<br>
如果是true就执行语句体2<br>
如果是false就继续判断关系表达式…看其结果是true还是false<br>
…<br>
如果没有任何关系表达式为true，就执行语句体n+1。</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/202009192129115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvdWdoQ1k=,size_16,color_FFFFFF,t_70#pic_center" alt></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">	<span class="comment">// x和y的关系满足如下： </span></span><br><span class="line">	<span class="comment">// x&gt;=3 y = 2x + 1; </span></span><br><span class="line">	<span class="comment">//‐1&lt;=x&lt;3 y = 2x; </span></span><br><span class="line">	<span class="comment">// x&lt;=‐1 y = 2x – 1; </span></span><br><span class="line">	<span class="comment">// 根据给定的x的值，计算出y的值并输出。 </span></span><br><span class="line">	<span class="comment">// 定义变量 </span></span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">5</span>; </span><br><span class="line">	<span class="keyword">int</span> y; </span><br><span class="line">	<span class="keyword">if</span> (x&gt;= <span class="number">3</span>) &#123; </span><br><span class="line">		y = <span class="number">2</span> * x + <span class="number">1</span>; </span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= ‐<span class="number">1</span> &amp;&amp; x &lt; <span class="number">3</span>) &#123; </span><br><span class="line">		y = <span class="number">2</span> * x; </span><br><span class="line">	&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">		y = <span class="number">2</span> * x ‐ <span class="number">1</span>; </span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;y的值是：&quot;</span>+y); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="语句练习">语句练习</h3>
<ul>
<li>指定考试成绩，判断学生等级
<ul>
<li>90-100 优秀</li>
<li>80-89 好</li>
<li>70-79 良</li>
<li>60-69 及格</li>
<li>60以下 不及格</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line"><span class="keyword">int</span> score = <span class="number">100</span>; </span><br><span class="line"><span class="keyword">if</span>(score&lt;<span class="number">0</span> || score&gt;<span class="number">100</span>)&#123; </span><br><span class="line">	System.out.println(<span class="string">&quot;你的成绩是错误的&quot;</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">90</span> &amp;&amp; score&lt;=<span class="number">100</span>)&#123;</span><br><span class="line"> 	System.out.println(<span class="string">&quot;你的成绩属于优秀&quot;</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">80</span> &amp;&amp; score&lt;<span class="number">90</span>)&#123;</span><br><span class="line">  	System.out.println(<span class="string">&quot;你的成绩属于好&quot;</span>); </span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">70</span> &amp;&amp; score&lt;<span class="number">80</span>)&#123; </span><br><span class="line"> 	System.out.println(<span class="string">&quot;你的成绩属于良&quot;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">60</span> &amp;&amp; score&lt;<span class="number">70</span>)&#123; </span><br><span class="line">    System.out.println(<span class="string">&quot;你的成绩属于及格&quot;</span>); </span><br><span class="line"> &#125;<span class="keyword">else</span> &#123; </span><br><span class="line">    System.out.println(<span class="string">&quot;你的成绩属于不及格&quot;</span>); </span><br><span class="line">   		&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="if语句和三元运算符的互换">if语句和三元运算符的互换</h3>
<p>在某些简单的应用中，if语句是可以和三元运算符互换使用的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> a = <span class="number">10</span>; </span><br><span class="line"> <span class="keyword">int</span> b = <span class="number">20</span>; </span><br><span class="line"> <span class="comment">//定义变量，保存a和b的较大值 </span></span><br><span class="line"> <span class="keyword">int</span> c; </span><br><span class="line"> <span class="keyword">if</span>(a &gt; b) &#123; </span><br><span class="line"> 	c = a; </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; </span><br><span class="line"> 	c = b; </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//可以上述功能改写为三元运算符形式 </span></span><br><span class="line"> c = a &gt; b ? a:b; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="案例">案例</h3>
<details class="folding-tag" cyan><summary> 判断三角形为什么三角形 </summary>
              <div class="content">
              <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">triangle</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一条边长&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二条边长&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第三条边长&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(a&gt;<span class="number">0</span>&amp;&amp;b&gt;<span class="number">0</span>&amp;&amp;c&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((a+b)&gt;c&amp;&amp;(a+c)&gt;b&amp;&amp;(c+b)&gt;a)&#123;</span><br><span class="line">                <span class="keyword">if</span> (a == b &amp; b== c &amp; a==c)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;是等边三角形&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (a == b | b == c | b == c)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;是等腰三角形&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;是三角形&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;不是三角形&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;边长不能小于零&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
              </div>
            </details>
<details class="folding-tag" cyan><summary> 解ax^2+bx+c=0的根 </summary>
              <div class="content">
              <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输入数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入a&quot;</span>);</span><br><span class="line">        <span class="keyword">float</span> a = sc.nextFloat();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入b&quot;</span>);</span><br><span class="line">        <span class="keyword">float</span> b = sc.nextFloat();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入c&quot;</span>);</span><br><span class="line">        <span class="keyword">float</span> c = sc.nextFloat();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">float</span> derta = b * b - <span class="number">4</span> * a * c;</span><br><span class="line">        <span class="keyword">float</span> kg = (<span class="keyword">float</span>) Math.sqrt(derta);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.out.println(derta);</span></span><br><span class="line"><span class="comment">//        System.out.println(kg);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">200</span> &gt;= a &amp;&amp; a &gt;= -<span class="number">200</span> &amp;&amp; <span class="number">200</span> &gt;= b &amp;&amp; b &gt;= -<span class="number">200</span> &amp;&amp; <span class="number">200</span> &gt;= c &amp;&amp; c &gt;= -<span class="number">200</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (derta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;方程组无实数根&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (derta == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;方程组有两个相同等的实数根为,X=&quot;</span> + (-b / (<span class="number">2</span> * a)));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (derta &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;方程组有两个不相等的根，X1=&quot;</span> + ((-b + kg) / (<span class="number">2</span> * a)) + <span class="string">&quot;,X2=&quot;</span> + ((-b - kg) / (<span class="number">2</span> * a)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
              </div>
            </details>
<h2 id="switch语句">switch语句</h2>
<h3 id="语句格式">语句格式</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123; </span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>：</span><br><span class="line">	语句体<span class="number">1</span>； </span><br><span class="line">	<span class="keyword">break</span>； </span><br><span class="line"><span class="keyword">case</span> 值<span class="number">2</span>：</span><br><span class="line">	语句体<span class="number">2</span>； </span><br><span class="line">	<span class="keyword">break</span>； </span><br><span class="line">...... </span><br><span class="line"><span class="keyword">case</span> 值n：</span><br><span class="line">	语句体n； </span><br><span class="line">	<span class="keyword">break</span>； <span class="comment">//可省略</span></span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="格式说明">格式说明</h3>
<ul>
<li>case：后面跟的是要和表达式进行比较的值</li>
<li>break：表示中断结束的意思，用来结束switch语句</li>
<li>default：表示所有情况都不匹配的时候就执行该处的内容</li>
</ul>
<h3 id="执行流程">执行流程</h3>
<ol>
<li>
<p>首先计算表达式的值</p>
</li>
<li>
<p>依次和case后面的值进行比较如果有对应的值就会执行相应的语句在执行的过程中遇到break就会结束</p>
</li>
<li>
<p>如果所有的case后面的值和表达式都不匹配就会执行default里面的语句体然后程序结束</p>
<p><img src="https://imgbjsxt.oss-cn-shanghai.aliyuncs.com/uploadfile/2017/0713/20170713091746450.png" alt="Java switch语句"></p>
</li>
</ol>
<h3 id="案例-v2">案例</h3>
<details class="folding-tag" cyan><summary> 输出对应的星期数 </summary>
              <div class="content">
              <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">switchtest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//需求：键盘录入一个星期数，输出对应的星期</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个星期数（1-7）&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (week)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期日&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入的星期数有误&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
              </div>
            </details>
<h3 id="case穿透">case穿透</h3>
<ul>
<li>
<p>case1:</p>
<p>case2:</p>
<p>case3:</p>
<p>​	语句体；</p>
<p>​	break；</p>
</li>
</ul>
<details class="folding-tag" cyan><summary> 输出对应的季节 </summary>
              <div class="content">
              <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">switchtest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">        </span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个月数（1-12）&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mouth = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (mouth)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;春季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;夏季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;秋季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;冬季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入的月份有误&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
              </div>
            </details>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记5-循环语句</title>
    <url>/2022/04/28/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="for循环">for循环</h2>
<h3 id="格式">格式</h3>
<ul>
<li>程序格式</li>
</ul>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for(初始化语句;条件判断语句;条件控制语句)&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="执行流程">执行流程</h3>
<ol>
<li>
<p>执行初始化语句</p>
</li>
<li>
<p>执行条件判断语句，看其结果是true还是false</p>
<p>​		如果是false，循环结束</p>
<p>​		如果是true，继续执行</p>
</li>
<li>
<p>执行循环体语句</p>
</li>
<li>
<p>执行条件控制语句</p>
</li>
<li>
<p>回到2继续</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/04/28/52c2083fff6d85e1.jpg" alt="for循环执行流程"></p>
</li>
</ol>
<h3 id="案例">案例</h3>
<details class="folding-tag" cyan><summary> 案例案例 </summary>
              <div class="content">
              <ul><li><p>输出五次helloworld</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//输出五次helloworld</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>求和</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//求1到10之和</span></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">10</span>;i++ )&#123;</span><br><span class="line">            n +=i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>求偶数和</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//求偶数和</span></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//定义偶数之和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;   <span class="comment">//取余的方法</span></span><br><span class="line">                num+=i;   <span class="comment">//利用下标确定偶数</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>求水仙花数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义变量n，用以保存水仙花数的数量，初始为0</span></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span> ;</span><br><span class="line">        <span class="comment">//输出水仙花数用到的循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= <span class="number">1000</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> ge = i%<span class="number">10</span>; <span class="comment">//获取个位数</span></span><br><span class="line">            <span class="keyword">int</span> shi = i/<span class="number">10</span>%<span class="number">10</span>; <span class="comment">//获取十位数</span></span><br><span class="line">            <span class="keyword">int</span> bai = i/<span class="number">10</span>/<span class="number">10</span>%<span class="number">10</span>; <span class="comment">//获取百位数</span></span><br><span class="line">            <span class="comment">//判定条件</span></span><br><span class="line">            <span class="keyword">if</span> (ge*ge*ge + shi*shi*shi + bai*bai*bai ==i)&#123;</span><br><span class="line">                System.out.println(i); <span class="comment">//输出水仙花数</span></span><br><span class="line">                n++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印最终结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;水仙花数共有&quot;</span> + n + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>
              </div>
            </details>
<h2 id="while循环">while循环</h2>
<h3 id="格式-v2">格式</h3>
<ul>
<li>
<p>完整格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line">while(条件判断语句)&#123;</span><br><span class="line">	循环体语句;</span><br><span class="line">	条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="执行流程-v2">执行流程</h3>
<ol>
<li>
<p>执行初始化语句</p>
</li>
<li>
<p>执行条件判断语句，看其结果是true还是false</p>
<p>​		如果是false，循环结束</p>
<p>​		如果是true，继续执行</p>
</li>
<li>
<p>执行循环体语句</p>
</li>
<li>
<p>执行条件控制语句</p>
</li>
<li>
<p>回到2继续</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/04/28/52c2083fff6d85e1.jpg" alt="while循环执行流程"></p>
</li>
</ol>
<h3 id="案例-v2">案例</h3>
<details class="folding-tag" cyan><summary> 案例案例 </summary>
              <div class="content">
              <ul><li><p>一张纸这多少次比珠穆朗玛峰高</p><ul><li><p>因为要反复折叠，所以要使用循环，但是不知道折叠几次，这种情况下更适合使用while循环</p><p>while（条件判断语句）{循环体}</p></li><li><p>循环的执行过程中每次纸张折叠，纸张的厚度要加倍因此需要先定义纸张厚度，在循环中使厚度加倍</p><p>double paper = 0.1；</p><p>while （条件判断语句）{</p><p>​	paper *= 2；}</p></li><li><p>折叠过程中当智障厚度大于珠峰就停止了，因此继续执行的要求使纸张厚度小于珠峰高度</p><p>int zf = 8844430；</p><p>while （paper &lt;= zf ）{…}</p></li><li><p>设置一个计数器，在循环中执行累加，对应折叠了多少次</p><p>int count = 0；</p><p>while （ paper &lt;= zf ）{</p><p>​	count++;</p><p>}</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhileTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> zf = <span class="number">8844430</span>;</span><br><span class="line">        <span class="keyword">double</span> paper = <span class="number">0.1</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (paper &lt;= zf)&#123;</span><br><span class="line">            paper *= <span class="number">2</span>;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>
              </div>
            </details>
<h2 id="do…while循环">do…while循环</h2>
<h3 id="格式-v3">格式</h3>
<ul>
<li>
<p>完整格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">	循环体语句;</span><br><span class="line">	 条件控制语句;</span><br><span class="line">&#125;while(条件判断语句);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="执行流程-v3">执行流程</h3>
<ol>
<li>
<p>执行初始化语句</p>
</li>
<li>
<p>执行循环体语句</p>
</li>
<li>
<p>执行条件控制语句</p>
</li>
<li>
<p>执行条件判断语句，看其结果是true还是false</p>
<p>​		如果是false，循环结束</p>
<p>​		如果是true，继续执行</p>
</li>
<li>
<p>回到2继续</p>
</li>
</ol>
<p><img src="https://s3.bmp.ovh/imgs/2022/04/28/aed7c9139326e130.jpg" alt="do...while循环"></p>
<h3 id="案例-v3">案例</h3>
<ul>
<li>
<p>输出五次helloworld</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoWhileTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;<span class="keyword">while</span> (j&lt;=<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="三种循环的区别">三种循环的区别</h2>
<h3 id="三种之间的区别">三种之间的区别</h3>
<ul>
<li>for循环和while循环先判断条件是否成立，然后决定是否执行循环体（先判断后执行）</li>
<li>do…while循环先执行一次循环体，然后判断条件是否成立，是否继续循环体（先执行后判断）</li>
</ul>
<h3 id="for和while的区别">for和while的区别</h3>
<ul>
<li>条件控制语句所控制的自增变量，因为归属for循环的语法结构中，在for循环结束后，就不能再次被访问到了</li>
<li>条件控制语句所控制的自增变量，对于while循环来说不归属其语法结构中，在while循环结束后，该变量还可以继续使用</li>
</ul>
<h3 id="死循环格式">死循环格式</h3>
<ul>
<li>for（;;）{}</li>
<li>while(true){}</li>
<li>do{}while(true);</li>
</ul>
<h3 id="p-s">p.s.</h3>
<ul>
<li>
<p>for循环常用于知道循环次数的问题</p>
</li>
<li>
<p>while常用于不知道循环次数的问题</p>
</li>
<li>
<p>while的死循环格式是最常用的</p>
</li>
<li>
<p>ctrl+c可结束死循环</p>
</li>
</ul>
<h2 id="跳转控制语句">跳转控制语句</h2>
<ul>
<li>
<p>跳过6和7</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TiaoZhuanTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;=<span class="number">20</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">7</span>|i==<span class="number">6</span>)&#123;</span><br><span class="line">                <span class="comment">//continue;</span></span><br><span class="line">                <span class="comment">//break;</span></span><br><span class="line">            &#125;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="循环嵌套">循环嵌套</h2>
<ul>
<li>
<p>九九乘法表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class QianTaoTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        for (int i = 1; i &lt;= 9; i++) &#123;</span><br><span class="line"></span><br><span class="line">            for (int j = 1; j &lt;= i; j++) &#123;</span><br><span class="line"></span><br><span class="line">                System.out.print(i + &quot;*&quot; + j + &quot;=&quot; + i * j + &quot; &quot;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记6-Random</title>
    <url>/2022/04/28/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-Random/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Random">Random</h2>
<h3 id="作用">作用</h3>
<ul>
<li>产生一个随机数</li>
</ul>
<h3 id="使用步骤">使用步骤</h3>
<ol>
<li>
<p>导包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Random;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>创建对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Random r = new RandomP();</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>获取随机数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int number = r.nextInt(10); //数据获取范围0到9[0,10)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="案例">案例</h3>
<ul>
<li>
<p>输出6个随机数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">suiji</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> number = r.nextInt(<span class="number">10</span>);</span><br><span class="line">            System.out.println(number);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>猜数字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Random;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line">public class SuiJi &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    </span><br><span class="line">        //首先要有一个要猜的数字，范围在一到一百之间</span><br><span class="line">        Random r = new Random();</span><br><span class="line">        int number = r.nextInt(100)+1;</span><br><span class="line">        </span><br><span class="line">        while(true)&#123;</span><br><span class="line">        </span><br><span class="line">            //每次都要输入要猜的数字，所以输入要进循环</span><br><span class="line">            Scanner sc = new Scanner(System.in);</span><br><span class="line">            System.out.println(&quot;请输入你要猜的数字&quot;);</span><br><span class="line">            int gn = sc.nextInt();</span><br><span class="line">            </span><br><span class="line">            //比较两个数</span><br><span class="line">            if (gn &gt; number)&#123;</span><br><span class="line">                System.out.println(&quot;大了&quot;);</span><br><span class="line">            &#125;else if (gn &lt; number)&#123;</span><br><span class="line">                System.out.println(&quot;小了&quot;);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                System.out.println(&quot;你猜中了！！！&quot;);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>random</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记7-数组</title>
    <url>/2022/05/01/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07-%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="数组定义格式">数组定义格式</h2>
<ul>
<li>一次性声明大量用于存储数据的变量</li>
<li>要存储的数据通常都是同类型数据，例如：考试成绩</li>
</ul>
<h3 id="数组">数组</h3>
<p><strong>（array）是一种用于存储多个相同类型数据的存储模型</strong></p>
<ul>
<li>
<p>格式一：数据类型[] 变量名</p>
<ul>
<li>例： int[] arr</li>
<li>定义了一个int类型的数组，数组名是arr     推荐</li>
</ul>
</li>
<li>
<p>格式二：数据类型 变量名[]</p>
<ul>
<li>例：int arr[]</li>
<li>定义了一个int类型的变量，变量名是arr数组</li>
</ul>
</li>
</ul>
<h2 id="数组初始化">数组初始化</h2>
<ul>
<li>
<p>java中的数组必须初始化后才能使用</p>
<p><strong>所谓初始化：就是为数组中的数组元素分配内存空间，并为每个数组元素赋值</strong></p>
</li>
</ul>
<h3 id="动态初始化">动态初始化</h3>
<p><strong>动态初始化：初始化时只指定数组长度，由系统为数组分配初始值</strong></p>
<ul>
<li>
<p>格式：数据类型[ ] 变量名 = new 数据类型[数组长度]；</p>
</li>
<li>
<p>范例：int[ ] arr = new int[3];</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 左边:</span></span><br><span class="line"><span class="comment">        *   int:说明数组中的元素类型使int类型</span></span><br><span class="line"><span class="comment">        *   []:说明这是一个数组</span></span><br><span class="line"><span class="comment">        *   arr:这是数组的名称</span></span><br><span class="line"><span class="comment">        * 右边:</span></span><br><span class="line"><span class="comment">        *   new:为数组申请内存空间</span></span><br><span class="line"><span class="comment">        *   int:说明数组中的元素类型是int类型</span></span><br><span class="line"><span class="comment">        *   []:说明这是一个数组</span></span><br><span class="line"><span class="comment">        *   3:数组长度，其实就是数组中的元素个数</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="数组元素访问">数组元素访问</h2>
<ul>
<li>
<p>数组变量访问方式</p>
<ul>
<li>格式：数组名</li>
</ul>
</li>
<li>
<p>数组内部保存的数据访问方式</p>
<ul>
<li>格式：数组名[索引]</li>
</ul>
</li>
<li>
<p>索引时数组中数据的编号方式</p>
</li>
<li>
<p>作用：索引用于访问数组中的数据使用，数组名[索引]等同于变量名，是一种特殊的变量名</p>
<ul>
<li>特征1：索引从0开始</li>
<li>特征2：索引是连续的</li>
<li>特征3：索引逐一增加，每次加1</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组名</span></span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]); <span class="comment">//[I@1540e19d</span></span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果------------------------</span><br><span class="line">    [I@<span class="number">1540e19d</span></span><br><span class="line">	<span class="number">0</span></span><br><span class="line">	<span class="number">0</span></span><br><span class="line">	<span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="内存分配">内存分配</h2>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137906347&page=61" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<h3 id="Java中内存分配">Java中内存分配</h3>
<ul>
<li>栈内存：存储局部变量
<ul>
<li>定义在方法中的变量，例如：arr</li>
<li>使用完毕，立刻消失</li>
</ul>
</li>
<li>堆内存：存储new出来的内容（实体，对象）数组在初始化时，会为存储空间添加默认值
<ul>
<li>整数：0</li>
<li>浮点数：0.0</li>
<li>布尔：false</li>
<li>字符：空字符</li>
<li>引用数据类型：null</li>
</ul>
</li>
<li>每一个new出来的东西都有一个地址值，使用完毕，会在垃圾回收器空闲时被回收</li>
</ul>
<h2 id="静态初始化">静态初始化</h2>
<p><strong>静态初始化：初始化时每个数组元素的初始值，由系统决定数组长度</strong></p>
<ul>
<li>
<p>格式：数据类型 [ ] 变量名 = new 数据类型[ ]{数据1，数据2，数据3…}</p>
<ul>
<li>范例：	     int[ ] arr      = new          int[]{1，2，3};</li>
</ul>
</li>
<li>
<p>简化格式：数据类型[ ]  变量名 = {数据1，数据2，数据3…}<br>
int[ ] arr = {1,2,3};</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Arraytest1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //定义一个数组</span><br><span class="line">        int[] arr = &#123;1,2,3&#125;;</span><br><span class="line"></span><br><span class="line">        //输出数组名</span><br><span class="line">        System.out.println(arr);</span><br><span class="line">        </span><br><span class="line">        //输出数组中的元素</span><br><span class="line">        System.out.println(arr[0]);</span><br><span class="line">        System.out.println(arr[1]);</span><br><span class="line">        System.out.println(arr[2]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果-------------------------------</span><br><span class="line">	[I@1540e19d</span><br><span class="line">	1</span><br><span class="line">	2</span><br><span class="line">	3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="数组操作常见的小问题">数组操作常见的小问题</h2>
<ol>
<li>索引越界<br>
<img src="https://s3.bmp.ovh/imgs/2022/05/01/ce01f8fa4b143240.jpg" alt="索引越界"></li>
</ol>
<p>报错代码：<code>arrayindexout of bounds exception</code></p>
<ol start="2">
<li>
<p>空指针异常<br>
<img src="https://s3.bmp.ovh/imgs/2022/05/01/70375cd34aa2e786.jpg" alt="空指针异常"></p>
<p>报错代码：<code>null pointer exception</code></p>
</li>
<li>
<p>null:空值，引用数据类型的默认值，表示不指向任何有效对象</p>
</li>
</ol>
<h2 id="数组常见操作">数组常见操作</h2>
<h3 id="遍历">遍历</h3>
<ul>
<li>
<p>遍历</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class BianLi &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //定义一个数组</span><br><span class="line">        int[] arr = &#123;2,6,9,8,7,5,2,4,6&#125;;</span><br><span class="line">        //遍历循环</span><br><span class="line">        for (int x = 0;x &lt; arr.length;x++)&#123;</span><br><span class="line">            System.out.println(arr[x]);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="获取数组元素数量">获取数组元素数量</h3>
<ul>
<li>格式：数组名.length
<ul>
<li>范例：arr.length</li>
</ul>
</li>
</ul>
<h3 id="获取最值">获取最值</h3>
<p>思路：</p>
<ol>
<li>
<p>定义一个变量，用于保存最大值（或最小值）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> max</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>去数组中第一个数据作为变量的初始值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> max = arr[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>与数组中剩余的数据逐个对比，每次对比将最大值保存到变量中</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(int x = <span class="number">1</span>;x &lt; arr.length;x++)&#123;</span><br><span class="line">	<span class="keyword">if</span>(arr[x] &gt; max)&#123;</span><br><span class="line">		max = arr[x];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>循环语句结束后打印变量的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">System.out.println(&quot;max:&quot;+max);</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HuoQuMax</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">15</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">42</span>,<span class="number">49</span>,<span class="number">4</span>,<span class="number">41</span>,<span class="number">5</span>,<span class="number">151</span>,<span class="number">1</span>,<span class="number">51</span>,<span class="number">51</span>,<span class="number">21</span>,<span class="number">3</span>,<span class="number">46</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">498</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个变量，用于保存最大值</span></span><br><span class="line">        <span class="comment">//取数组中第一个数据作为变量的初始值</span></span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//与数组中剩余的数据数个对比，每次比对将最大值保存到变量中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x =<span class="number">1</span>;x &lt; arr.length;x++ )&#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] &gt; max)&#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环结束后打印变量的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;max:&quot;</span>+max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记8-方法</title>
    <url>/2022/05/01/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08-%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="方法概述">方法概述</h2>
<h3 id="什么是方法">什么是方法</h3>
<p><strong>方法（method）是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集</strong><br>
注意：</p>
<ul>
<li>方法必须先创建才能使用，该过程称为方法定义</li>
<li>方法创建后并不是直接运行的，需要手动使用后才执行，该过程称为方法调用</li>
</ul>
<h2 id="方法的定义和调用">方法的定义和调用</h2>
<h3 id="方法定义">方法定义</h3>
<ul>
<li>格式：  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名（）&#123;</span><br><span class="line">	<span class="comment">//方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>范例： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void isEvenNumber（）&#123;</span><br><span class="line">	//方法体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="方法调用">方法调用</h3>
<ul>
<li>
<p>格式：方法名();</p>
</li>
<li>
<p>范例：isEvenNumber();<br>
注意：</p>
</li>
<li>
<p>方法必须先定义后调用，否则程序将报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class diaoyong &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //调用方法</span><br><span class="line">        isEvenNumber();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //需求：定义一个方法，在方法上定义一个变量，判断该数据是否时偶数</span><br><span class="line">    public static void isEvenNumber()&#123;</span><br><span class="line">        //定义变量</span><br><span class="line">        int number = 10;</span><br><span class="line"></span><br><span class="line">        //判断该数据是否是偶数</span><br><span class="line">        if(number%2 == 0)&#123;</span><br><span class="line">            System.out.println(true);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            System.out.println(false);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="方法调用过程">方法调用过程</h3>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137906835&page=71" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<h3 id="方法练习">方法练习</h3>
<p>需求：设计一个方法用于打印两个数中的较大数</p>
<p>思路：</p>
<ol>
<li>
<p>定义一个方法，用于打印两个数字中较大的数，例如getMax()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>方法中定义两个变量，用于保存两个数字</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用分支语句分两种情况对两个数字的大小关系进行处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">	System.out.println(a);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	System.out.println(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在main()方法中调用定义好的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">	<span class="comment">//调用方法</span></span><br><span class="line">	getMax();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">diaoyong2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在main（）方法中调用定义好的方法</span></span><br><span class="line">        getMax();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于打印两个数字中较大的数，例如getMax()</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法中定义两个变量，用于保存两个数字</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用分支语句两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="带参数方法的定义和调用">带参数方法的定义和调用</h2>
<h3 id="带参数方法定义">带参数方法定义</h3>
<ul>
<li>
<p>格式：<code>public static void 方法名（参数）&#123;......&#125;</code></p>
</li>
<li>
<p>格式（单个参数）：<code>public static void 方法名 （数据类型 变量名）&#123;......&#125;</code></p>
<ul>
<li>范例（单个参数）：<code>public static void isEvenNumber(int number)&#123;......&#125;</code></li>
</ul>
</li>
<li>
<p>格式（多个参数）：<code>public static void 方法名 （数据类型 变量名1，数据类型 变量名2，....）&#123;......&#125;</code></p>
<ul>
<li>
<p>范例（多个参数）：<code>public static void isEvenNumber(int number1，int number2)&#123;......&#125;</code></p>
<p><strong>注意：</strong></p>
</li>
<li>
<p>方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错</p>
</li>
<li>
<p>方法定义时，多个参数之间使用逗号（，）分隔</p>
</li>
</ul>
</li>
</ul>
<h3 id="带参数方法调用">带参数方法调用</h3>
<ul>
<li>
<p>格式：<code>方法名（参数）</code></p>
</li>
<li>
<p>格式（单个参数）：<code>方法名（变量名/常量值）；</code></p>
<ul>
<li>范例（单个参数）：<code>isEvenNumber(5);</code></li>
</ul>
</li>
<li>
<p>格式（多个参数）：<code>方法名（变量名1/常量值1，变量名2/常量值2）；</code></p>
<ul>
<li>范例（多个参数）：<code>getMax(5,6);</code><br>
<strong>注意</strong></li>
<li>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">diaoyong3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//常量值的调用</span></span><br><span class="line">        isEvenNumber(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//变量的调用</span></span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">9</span>;</span><br><span class="line">        isEvenNumber(number);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//需求：定义一个方法，该方法接收一个参数，判断该数据是否是偶数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">isEvenNumber</span><span class="params">(<span class="keyword">int</span> number)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (number%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="keyword">true</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="形参和实参">形参和实参</h3>
<ul>
<li>
<p>形参：方法定义中的参数<br>
等同于变量定义格式，例如：int number</p>
</li>
<li>
<p>实参：方法调用中的参数<br>
等同于使用变量或常量，例如：10   number</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/02/95a76241ea6e45db.jpg" alt></p>
</li>
</ul>
<h3 id="带参数方法练习">带参数方法练习</h3>
<p>​	需求：设计一个方法用于打印两个书中的较大数，数据来自方法参数</p>
<p>​	思路：</p>
<ol>
<li>
<p>定义一个方法，用于打印两个数字中的较大数，例如getMax()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>为方法定义两个参数，用于接收两个数字</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用分支语句分两种情况对两个数字的大小关系进行处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">	System.out.println(a);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	System.out.println(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在main()方法中调用定义好的方法（使用常量）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">	<span class="comment">//直接转递常量</span></span><br><span class="line">	getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在main()方法中调用定义好的方法（使用变量）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">	<span class="comment">//直接常量，传递</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	getMax(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">dioayong4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法（使用常量）</span></span><br><span class="line">        getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法（使用变量）</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">		getMax(a,b);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class="line">    <span class="comment">//为方法定义两个参数，用于接收两个数字</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="带返回值方法定义">带返回值方法定义</h3>
<ul>
<li>
<p>格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 数据类型 方法名（参数）&#123;</span><br><span class="line">	<span class="keyword">return</span> 数据；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>范例1：</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> isEvenNumber（<span class="keyword">int</span> number）&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">true</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>范例2：</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> getMax（<span class="keyword">int</span> a,<span class="keyword">int</span> b）&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">100</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：</p>
</li>
<li>
<p>方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序要出错</p>
</li>
</ul>
<h3 id="带返回值方法调用">带返回值方法调用</h3>
<ul>
<li>格式1：<code>方法名（参数）；</code>
<ul>
<li>范例：<code>isEvenNumber(5);</code></li>
</ul>
</li>
<li>格式2：<code>数据类型 变量名 = 方法名（参数）；</code>
<ul>
<li>范例：<code>boolean flag = isEvenNumber(5);</code><br>
<strong>注意：</strong></li>
</ul>
</li>
<li>方法的返回值通常会使用变量接收，否则该返回值将无意义</li>
</ul>
<h3 id="带返回值方法练习">带返回值方法练习</h3>
<p>需求：设计一个方法可以获取两个数的较大值，数据来源于参数<br>
思路：</p>
<ol>
<li>
<p>定义一个方法，用于获取两个数字中的较大数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用分支语句分两种情况对两个数字的大小关系进行处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>根据题设分别设置两种情况下对应的返回结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在main()方法中调用定义好的方法并使用变量保存</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> result = getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在main()方法中调用定义好的方法并直接打印结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">	System.out.println(getMax(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">diaoyong5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法并使用变量保存</span></span><br><span class="line">        <span class="keyword">int</span> result = getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法并直接打印结果</span></span><br><span class="line">        System.out.println(getMax(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义一个方法，用于获取两个数字中的较大数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="comment">//根据题设分别设置两种情况下对应的返回结果</span></span><br><span class="line">        <span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="方法注意事项">方法注意事项</h2>
<h3 id="规范">规范</h3>
<ul>
<li>方法不能嵌套<br>
<img src="https://s3.bmp.ovh/imgs/2022/05/02/1545a9264b0b9c96.jpg" alt></li>
<li>void表示无返回值，可以省略return,也可以单独的书写return，后面不加数据<br>
<img src="https://s3.bmp.ovh/imgs/2022/05/02/fa4ae2d5efbbe7d8.jpg" alt></li>
</ul>
<h3 id="方法的通用格式">方法的通用格式</h3>
<ul>
<li>
<p>格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 返回值类型 方法名（参数）&#123;</span><br><span class="line">	方法体；</span><br><span class="line">	<span class="keyword">return</span> 数据；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>public static	           修饰符</p>
</li>
<li>
<p>返回值类型	             方法操作完毕之后返回的数据的数据类型<br>
如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return</p>
</li>
<li>
<p>方法名		                 调用方法时候使用的标识</p>
</li>
<li>
<p>参数 	                    	由数据类型和变量名组成，多个参数之间用逗号隔开</p>
</li>
<li>
<p>方法体	                 	完成功能的代码块</p>
</li>
<li>
<p>return	                 	如果方法操作完毕，有数据返回，用于把数据返回给调用者</p>
</li>
<li>
<p>定义方法时，要做到两个明确</p>
<ul>
<li>明确返回值类型：主要是明确方法操作完毕之后是否由数据返回，如果没有，写void；如果有，写对应的数据类型<br>
明确参数：主要是明确参数的类型和数量</li>
</ul>
</li>
<li>
<p>调用方法时</p>
<ul>
<li>void类型的方法，直接调用即可<br>
非void类型的方法，推荐用变量接收调用</li>
</ul>
</li>
</ul>
<h2 id="方法重载">方法重载</h2>
<h3 id="方法重载概述">方法重载概述</h3>
<ul>
<li>
<p>图片</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/02/2f80a80965f20192.jpg" alt></p>
</li>
<li>
<p>方法重载制同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p>
</li>
<li>
<p>多个方法在一个类中</p>
</li>
<li>
<p>多个方法具有相同的方法名</p>
</li>
<li>
<p>多个方法的参数不相同，类型不同或者数量不同</p>
</li>
</ul>
<h3 id="方法重载的特点">方法重载的特点</h3>
<ul>
<li>
<p>重载判断</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/02/bbce3443a18ae21e.jpg" alt></p>
</li>
<li>
<p>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</p>
</li>
<li>
<p>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否构成重载<br>
图片</p>
</li>
</ul>
<h3 id="方法重载练习">方法重载练习</h3>
<p>需求：使用方法重载的思想，设计比较两个整数是否相同的办法，兼容全整数类型（byte,short,int,long）<br>
思路：</p>
<ol>
<li>
<p>定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a==b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">long</span> a,<span class="keyword">long</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a==b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>定义所有的重载方法，两个byte类型与两个short类型参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">byte</span> a,<span class="keyword">byte</span> b)</span></span>&#123;</span><br><span class="line">	<span class="comment">//代码片段</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">short</span> a,shaort b)</span></span>&#123;</span><br><span class="line">	<span class="comment">//代码片段</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>完成方法的调用，测试运行结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">diaoyong6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        System.out.println(compare(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="keyword">byte</span>)<span class="number">10</span>,(<span class="keyword">byte</span>)<span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="keyword">short</span>) <span class="number">10</span>,(<span class="keyword">short</span>) <span class="number">20</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//int</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;int&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//byte</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">byte</span> a,<span class="keyword">byte</span> b)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;byte&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//short</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">short</span> a,<span class="keyword">short</span> b)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;byte&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//long</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">long</span> a,<span class="keyword">long</span> b)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;byte&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="方法的参数传递">方法的参数传递</h2>
<h3 id="方法参数传递（基本类型）">方法参数传递（基本类型）</h3>
<p>对于基本数据类型的参数，形式参数的改变，不影响实际参数的值</p>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137907327&page=82" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<h3 id="方法参数传递（引用类型）">方法参数传递（引用类型）</h3>
<iframe src="//player.bilibili.com/player.html?aid=80585971&bvid=BV18J411W7cE&cid=137907379&page=83" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="max-width: 100%" width="100%" height="550"> </iframe>
<h3 id="案例：数组遍历">案例：数组遍历</h3>
<p>需求：设计一个方法用于数组遍历，要求遍历结果是在一行上的。例如：[11,22,33,44,55]</p>
<ol>
<li>
<p>定义一个数组，用静态初始化完成数组元素初始化</p>
</li>
<li>
<p>定义一个方法，用数组遍历通用格式对数组进行遍历</p>
</li>
<li>
<p>用新的输出语句修改遍历操作</p>
</li>
<li>
<p>调用遍历方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//遍历数组 输出[11,22,33,44,55]类型</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>&#125;;</span><br><span class="line">        printArray(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (x == arr.length-<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.print(arr[x]);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(arr[x]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="案例：数组最大值">案例：数组最大值</h3>
<p>需求：设计一个方法用于获取数组中元素最大值，调用方法并输出结果<br>
思路：</p>
<ol>
<li>
<p>定义一个数组，用静态初始化完成数组元素初始化</p>
</li>
<li>
<p>定义一个方法，用来获取数组中的最大值</p>
</li>
<li>
<p>调用获取最大值方法，用变量接收返回结果</p>
</li>
<li>
<p>把结果输出在控制台</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">151</span>,<span class="number">56</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">54</span>,<span class="number">42</span>,<span class="number">165</span>,<span class="number">156</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">56</span>,<span class="number">12</span>,<span class="number">132</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用获取最大值方法，用变量接受返回值结果</span></span><br><span class="line">        <span class="keyword">int</span> number = getMax(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把结果输出在控制台</span></span><br><span class="line">        System.out.println(<span class="string">&quot;number:&quot;</span>+number);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用来获取数组中最大值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>;x &lt; arr.length;x++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] &gt; max)&#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>java学习笔记9-简单案例</title>
    <url>/2022/05/04/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B09-%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="减肥计划if版">减肥计划if版</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*需求：输入星期数，显示今天的减肥活动</span></span><br><span class="line"><span class="comment">    周一：跑步</span></span><br><span class="line"><span class="comment">    周二：游泳</span></span><br><span class="line"><span class="comment">    周三：慢走</span></span><br><span class="line"><span class="comment">    周四：动感单车</span></span><br><span class="line"><span class="comment">    周五：拳击</span></span><br><span class="line"><span class="comment">    周六：好好吃一顿</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jianfei0if</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入一个星期数，用一个变量接收</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;输入一个星期数（1-7）&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对星期数进行判断，用if语句实现</span></span><br><span class="line">        <span class="keyword">if</span> (week &lt; <span class="number">1</span> || week &gt; <span class="number">7</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">4</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">5</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="减肥计划swit版">减肥计划swit版</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jianfei0switch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个数（1-7）&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (week)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入有误&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="逢七过">逢七过</h2>
<p><strong>输出含七或七的倍数的数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*需求：</span></span><br><span class="line"><span class="comment">输出含七或七的倍数的数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">feng7guo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取1-100的数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//if判断</span></span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">7</span> || i / <span class="number">10</span> % <span class="number">10</span> == <span class="number">7</span> || i % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//输出</span></span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>输出不含七或七的倍数的数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="comment">//输出不含七或七的倍数的数</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">feng7guo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取1-100的数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//if判断</span></span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">10</span> != <span class="number">7</span> &amp;&amp; i / <span class="number">10</span> % <span class="number">10</span> != <span class="number">7</span> &amp;&amp; i % <span class="number">7</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//输出</span></span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<h2 id="兔生兔">兔生兔</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*需求：</span></span><br><span class="line"><span class="comment">有一对兔子，从出生后第三个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问二十个月的兔子对数为多少</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*规律：</span></span><br><span class="line"><span class="comment">从第三个数据开始，每一个数据都是前两个数据之和</span></span><br><span class="line"><span class="comment">第一个第二个数据是已知的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">用数组模拟：</span></span><br><span class="line"><span class="comment">arr[0] = 1;</span></span><br><span class="line"><span class="comment">arr[1] = 1;</span></span><br><span class="line"><span class="comment">arr[2] = arr[0] + arr[1];</span></span><br><span class="line"><span class="comment">arr[3] = arr[1] + arr[2];</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">tuzi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用动态初始化完成数组元素的初始化，长度为20</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//以为第一个月第二个月是已知的所以</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用循环实现每个月的兔子对数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">2</span>; x &lt; arr.length;x++)&#123;</span><br><span class="line">            arr[x] = arr[x-<span class="number">2</span>] + arr[x-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出数组中最后一个元素，就是第20个月的兔子对数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;20个月的兔子对数为：&quot;</span>+arr[<span class="number">19</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="百钱百鸡">百钱百鸡</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱1</span></span><br><span class="line"><span class="comment">百钱买百鸡，问鸡翁，鸡母，鸡雏各几何</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">baiqianbaiji</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//第一层循环，表示鸡翁的范围，初始化表达式的变量定义为x=0，判断条件是x&lt;=20</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt;= <span class="number">20</span>; x++) &#123;</span><br><span class="line">            <span class="comment">//第二层循环，表示鸡母的范围，初始化表达式的变量自定义为y=0，判断条件是y&lt;=33</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt;= <span class="number">33</span>; y++) &#123;</span><br><span class="line">                <span class="comment">//这个时候，用于表示鸡雏的变量z=100-x-y</span></span><br><span class="line">                <span class="keyword">int</span> z = <span class="number">100</span> - x - y;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//判断表达式z%3==0和表达式5*x+3*y+z/3==100是否同时成立</span></span><br><span class="line">                <span class="keyword">if</span> (z % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; <span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> == <span class="number">100</span>) &#123;</span><br><span class="line">                    System.out.println(x + <span class="string">&quot;,&quot;</span> + y + <span class="string">&quot;,&quot;</span> + z);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="数组元素求和">数组元素求和</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">需求：有这样一个数组，元素是&#123;68，27，95，88，171，996，51，210&#125;.求出该数组中满足要求的元素和</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sunarr</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">68</span>, <span class="number">27</span>, <span class="number">95</span>, <span class="number">88</span>, <span class="number">171</span>, <span class="number">996</span>, <span class="number">51</span>, <span class="number">210</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个求和变量，初始值是0</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组，获取到数组中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="comment">//判断该元素是否满足条件，如果满足就累加</span></span><br><span class="line">            <span class="keyword">if</span> (arr[x] % <span class="number">10</span> != <span class="number">7</span> &amp;&amp; arr[x] / <span class="number">10</span> % <span class="number">10</span> != <span class="number">7</span> &amp;&amp; arr[x] % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                sum += arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出求和变量的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;sun:&quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="数组内容相同">数组内容相同</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">需求：设计一个方法，比较两个数组是否相同</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shuzuxiangtong</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，分别使用静态初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] aar = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] aar2 = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法，用变量接受</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = compare(aar,aar2);</span><br><span class="line">        <span class="comment">//输出结果</span></span><br><span class="line">        System.out.println(flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于比较两个数组的内容是否相同</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    两个明确：</span></span><br><span class="line"><span class="comment">        返回值类型：boolean</span></span><br><span class="line"><span class="comment">        参数：int[] arr,int arr2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span>[] arr2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//首先比较数组的长度，如果长度不相同，数组内容肯定不相同，返回false</span></span><br><span class="line">        <span class="keyword">if</span> (arr.length != arr2.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//其次遍历，比较两个数组中的每一个元素，只要有元素不相同，返回false</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] != arr2[x]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="查找">查找</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">需求：找数组中的索引值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">zhachao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，分别使用静态初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">51</span>, <span class="number">24</span>, <span class="number">36</span>, <span class="number">95</span>, <span class="number">78</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入要查找的数据，用一个变量接收</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;输入要查找的数据&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> number = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//输出索引变量</span></span><br><span class="line">        <span class="keyword">int</span> index = getIndex(arr,number);</span><br><span class="line">        System.out.println(<span class="string">&quot;index:&quot;</span> + index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找指定的数据在数组中的索引</span></span><br><span class="line">    <span class="comment">//定义一个方法遍历查找数组元素</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    两个明确：</span></span><br><span class="line"><span class="comment">        返回值类型：int</span></span><br><span class="line"><span class="comment">        参数：int[] arr ,int number</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getIndex</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个索引变量，初始值为-1</span></span><br><span class="line">        <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组，获取到数组中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="comment">//拿键盘录入的数组和数组中的每一个元素进行比较，如果值相同，就把该值对应的索引赋给index变量</span></span><br><span class="line">            <span class="keyword">if</span> (arr[x] == number) &#123;</span><br><span class="line">                index = x;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回索引</span></span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="反转">反转</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">需求：</span></span><br><span class="line"><span class="comment">已知数组，用程序把数组中元素交换</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">fanzhuan</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，分别使用静态初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">51</span>, <span class="number">99</span>, <span class="number">65</span>, <span class="number">35</span>, <span class="number">45</span>,&#125;;</span><br><span class="line">        </span><br><span class="line">		<span class="comment">//反转数组</span></span><br><span class="line">        reverse(arr);</span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        printArray(arr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义一个方法调换数组元素</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    两个明确</span></span><br><span class="line"><span class="comment">        返回值类型：void</span></span><br><span class="line"><span class="comment">        参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//循环遍历数组，这一次初始化语句定义两个索引变量，判断条件是开始索引小于等于结束索引</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>, end = arr.length - <span class="number">1</span>; start &lt;= end; start++, end--) &#123;</span><br><span class="line">            <span class="comment">//变量交换</span></span><br><span class="line">            <span class="keyword">int</span> temp = arr[start];</span><br><span class="line">            arr[start] = arr[end];</span><br><span class="line">            arr[end] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//定义一个方法打印数组输出[a,b]格式</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    两个明确</span></span><br><span class="line"><span class="comment">        返回值类型：void</span></span><br><span class="line"><span class="comment">        参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span> <span class="params">( <span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (x == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.print(arr[x]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(arr[x] + <span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="评委打分">评委打分</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">需求：6个评委打分，分数为0-100的整数分，选手的最后的分为：去掉一个最高分，去掉一个最低分，剩下的平均值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">pingweidafen</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用动态初始化完成数组元素的初始化，长度为6</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入评委分数</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (x + <span class="number">1</span>) + <span class="string">&quot;个评委打分&quot;</span>);</span><br><span class="line">            arr[x] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//定义方法实现获取数组中的最高分（最大值）调用方法</span></span><br><span class="line">        <span class="keyword">int</span> max = getMax(arr);</span><br><span class="line">        <span class="comment">//定义方法实现获取数组中的最低分（最小值）调用方法</span></span><br><span class="line">        <span class="keyword">int</span> min = getMin(arr);</span><br><span class="line">        <span class="comment">//定义方法实现获取数组中的所有元素和（数组元素和）调用方法</span></span><br><span class="line">        <span class="keyword">int</span> sum = getSum(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按照规则出分</span></span><br><span class="line">        <span class="keyword">int</span> avg = (sum - max - min) / (arr.length - <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;最终得分为：&quot;</span> + avg);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法求数组元素之和</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     两个明确：</span></span><br><span class="line"><span class="comment">         返回值类型：int</span></span><br><span class="line"><span class="comment">         参数：int[] arr</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            sum += arr[x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//定义一个方法求最小值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">       两个明确：</span></span><br><span class="line"><span class="comment">           返回值类型：int</span></span><br><span class="line"><span class="comment">           参数：int[] arr</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMin</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> min = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] &lt; min) &#123;</span><br><span class="line">                min = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> min;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//定义一个方法求最大值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">       两个明确：</span></span><br><span class="line"><span class="comment">           返回值类型：int</span></span><br><span class="line"><span class="comment">           参数：int[] arr</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] &gt; max) &#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>《FF14：晓月之终途》晚安,绝望与痛苦</title>
    <url>/2022/04/12/%E3%80%8AFF14%EF%BC%9A%E6%99%93%E6%9C%88%E4%B9%8B%E7%BB%88%E9%80%94%E3%80%8B%E6%99%9A%E5%AE%89-%E7%BB%9D%E6%9C%9B%E4%B8%8E%E7%97%9B%E8%8B%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://static.web.sdo.com/jijiamobile/pic/ff14/wallpaper/20220223patch60/ffxiv_6.0patch_01_2560x1440.jpg" alt></p>
<p>由流星开启的故事最终也由流星结束，本是来带美好愿望的meteor在ff14中却总是随着痛苦和绝望而来，落下的卫月，终结的歌声，这一切都是由一颗怜悯的心引起：去寻找一道无法回答的问题，寻找希望的问题得到了绝望的答案，而我们就是在ff14中在绝望的答案中，探寻获得希望的方法</p>
<p>6.0的剧情十分丰富，丰富到比之前的任何一个大版本都要丰富，求助帝都，歼灭佐迪亚克，支援末世降临的拉札罕，前往古代寻找真相，飞往宇宙打败梅蒂恩，打败芝诺斯，这些内容完全可以用两个版本呈现，所以6.0整体会显得有些拥挤仓促，但是每个篇章的质量都是非常不错的，主要问题在于每个篇章的转折过于大了了，篇章之间的衔接有点薄弱以至于有很强的割裂感和一种恍惚感就是还没反应过来，除了这些6.0的剧情作为一个故事的结局还是非常不错的面具强大的人物塑造能力总能引起我的共情和纠结，制造出的矛盾也能相对正确的方式解决，人与人之间的矛盾，人与神之间的矛盾，神与神之间的矛盾，神与人之间的矛盾：侵略，毁灭，异论，终结，在6.0中制作组找出了相对满意的答案</p>
<p>无论失败多少次也要奋力拼搏，即使深陷绝望之中也要心怀希望，谁都无法永远一帆风顺，成功总要伴随失败和挫折，这样的话在经历过2.0，3.0，4.0，5.0，6.0之后如此拥有份量，也给予了我前进的动力，6.0中一直在让我们从前的冒险发挥了作用，一直在证明我们的旅途是有意义的，我们的旅途是存在的，我们的旅途并不是只为了走过而已</p>
<p>Ff14的世界并不是为了我们而创造的，我们只是加入到了这个世界之中，没有用完就抛弃的角色，他们为这个世界所作出的奋斗都被重视着，穆恩布瑞达，为使命而献身的真正勇士，许多人跳过了这段的剧情以至于完全不知道有这样一位角色，我心中一直的遗憾，终于在这一次于里昂热对他做出了道别，不只穆恩布瑞达，帕帕力莫，奥尔什方，梅菲利亚，以及许多许多的人物，这个世界并未将他们忘记，即使停留在了道路的中途，我们依旧肩负着他们，6.0中当我们前进想起他们时，也给了我们巨大的力量</p>
<p>6.0中多了很多的单人本，所以单人体验好了很多，故事更有变化，更有趣，也更有代入感，更像一个单独的rpg游戏，对我来说还是很好的，新增的跟随系统感觉不是那么亮眼，然后主线中用了太多次都有点腻了，就玩法来说太单调了也不有趣对于剧情的理解和帮助也不是很大</p>
<p>最让我惊叹的还是厄尔庇斯篇，仅仅一篇就解释了事件的起因，经过和结果，而且人物塑造非常好，干净利索，有理有据，逻辑清晰，很难不让人动容，维涅斯，希斯拉德，爱梅特赛尔克，赫尔墨斯，梅蒂恩每一个都塑造的非常立体，维涅斯和赫尔墨斯虽然是第一次登场，但这编排这对话这剧情是的他们的人格魅力展现的一览无余，这仅仅是在这一篇中就展现出来了，真的非常厉害，希斯拉德的调皮，爱梅特赛尔克的傲娇，梅蒂恩的可爱，也都完全的表现了出来</p>
<p>“人类可以挑选什么是改存在的，那么也要做好被挑选的准备”</p>
<p>“痛苦和苦难是无法避免的，不要留恋过去，要着眼未来，我创造了一个充满痛苦和绝望的世界，但只有在这样的世界中生存下来，人类才有未来可言”</p>
<p><img src="/.io//hdl.jpg" alt></p>
<p>海德林就像一位严格的母亲，坚信温室中长不出能经历风雨的花朵，悉知只靠伪神活在过去是没有未来的，因此他囚禁了伪神，成为星球的意志，经历一万年之久，终于看到已经成长成大树和森林的孩子们</p>
<p>拂晓就是清晨的第一缕阳光，我们就象征着希望，我不认为如此庞大的的世界早在10年前就已经决定好了，相反后期扩展出来的情节的延续的如此顺畅自然，对于这样大长篇的剧情安排和掌控14制作组真的很厉害</p>
<p>也许是网游的关系，其他的rpg中的人物让我感到是他们都只是主角的关系，是主角的伙伴，而在ff14中我真的觉得我自己已经和拂晓成员的每一个人都成为的朋友，从毛头小子到成熟稳重的桑克瑞德，从沉默内向到诙谐风趣的于里昂热，从青涩懵懂到坚定强大的雅修特拉，从未经世事到肩负命运的阿尔菲诺和阿莉塞，从只知复仇到放下执念的埃斯蒂尼安，以及从一个小小接待员到如今的拂晓脊梁塔塔露，可露儿，回顾过去总能想到一些有趣的情节，回过神来又能感到他们真的成长了，而我们，从一个小小的冒险者与太多太多的人邂逅，获得了太多太多的帮助，终于能够独当一面了，就像是真的在游戏的世界中生活了很久，想必，这就是mmorpg最大的魅力吧</p>
<p>本是带来希望的鸟，却夺走了无数的生命，你一定非常的，非常的不甘与悔恨吧，温柔的孩子啊，请让我拭去你的泪水，由我来为你带来希望，所以，张开你的双臂，露出美丽的羽毛展翅翱翔吧，这一次，你不用再去寻找，不用再次迷茫，这一次让我们一起回家…</p>
<p>“只是，请允许我最后歌唱一次。这次我要唱出自己的心声……唱出我找到的喜悦”</p>
<p>晚安，梅蒂恩</p>
<p><img src="/.io//goodnight.jpg" alt></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>ff14</tag>
        <tag>晓月之终途</tag>
        <tag>mmorpg</tag>
        <tag>佳作</tag>
      </tags>
  </entry>
  <entry>
    <title>《ever17》——i need you!</title>
    <url>/2022/02/23/%E3%80%8Aever17%E3%80%8B%E2%80%94%E2%80%94i-need-you/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>开始会觉得不明所以，觉得没有亮点，觉得一切都在掌握之中，但是这是一个非常非常慢热的avg，不玩到最后一刻是无法体会它带给你的震撼，已经好久好久没有这种体验了，无论是游戏，动画，漫画等等，带给我如此震撼的作品已经很久很久没有遇到了，真是不错，以我个人非常肤浅和主观的视点，这真是一部能给人惊喜并抓住人性柔弱的作品，一部注定能深刻烙印在玩家心中的作品，你猜不中的，你躲不开的，这个陷阱，你会乖乖的落入其中，然后被漫过头顶。<br>
<img src="/.io//1.jpg" alt></p>
<p>完整的设定，紧密的逻辑，巧妙地诡计，深入的铺垫都为最后的结局创造了无与伦比的感官体验，发售于2002年《ever17》如今已经过去20年了，用现在的视角来看依旧毫无违和的感觉，同众多avg一样，游戏中我们要经历很多次结局才能达到真正的结局，也是因为多次的结局才使这个游戏更加完整。</p>
<p><img src="/.io//3.jpg" alt></p>
<p>深海之中一个事故一个事件，一个规划十七年的计划，主角是谁，是我们，来自上帝视角的我们，一个一个结局的铺垫在最终一刻爆发，其能量足以使人瞠目结舌，当可可在仓中感谢我们时真是让我再也忍不住了，我的情感在哪一刻爆发了，这一时刻，也是这部作品在我心中封神的一刻，他完美的利用了avg的机制，运用巧妙的诡叙，使文冒险游戏发挥到极致之极致。不愧为20年前的avg巅峰，看似的轮回却是仅仅一条线，被骗了，被题目骗了，被机制骗了，玩家完全被玩弄于股掌之中，极其清晰的逻辑和广而深的铺垫使你很难找到打的漏洞，唯心与唯物之间找到了一个平衡点，谁能想到20年前就已经出现了如此如此厉害的作品，谁能想到20年前，就有人领悟到了avg的究极诡叙，打越钢太郎，真是天才</p>
<p>唉，凭我浅薄至极的语言实在无法说出他的优秀，也许每个人都有不同的体验与感悟，但只有玩过之后才听明白，才能感受到他的魅力。</p>
<p>如果你决心要玩，请你无限降低对他的期待。<br>
<img src="/.io//2.jpg" alt><br>
最后非常感谢一直催我玩的朋友，后悔死了，应该早点玩的！！！</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>avg</tag>
        <tag>剧透警告</tag>
        <tag>神作</tag>
      </tags>
  </entry>
  <entry>
    <title>《死亡搁浅》——一场旅行</title>
    <url>/2022/01/08/%E3%80%8A%E6%AD%BB%E4%BA%A1%E6%90%81%E6%B5%85%E3%80%8B%E2%80%94%E2%80%94%E5%B9%B6%E4%B8%8D%E5%AD%A4%E7%8B%AC%E7%9A%84%E6%97%85%E8%A1%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>《死亡搁浅》又名开车模拟器，修路模拟器，点赞模拟器，以及谢谢你陌生人，作为2019年11月发售的游戏恰巧赶上了国内疫情最严重的时候，当时我听到这个名字——死亡搁浅，就觉得这名字真帅啊，可惜那时候死亡搁浅还没有上pc所以我就没怎么关注，终于在2021年四月购入但是作为一名不好吃热豆腐的人直到同年十月才开始游戏，而今天我终于把他玩完了，现在我终于能放下心来谈谈它了，在我心中这是是一款满分的游戏，也是一款满分的RPG。</p>
<p>作为一款rpg游戏有些东西是不能被省略掉的，死亡搁浅很清楚自己要表达什么，巧妙地精准的保留了让玩家体验的过程，我们扮演一名送货员，以他的视角接触到各式各样的人，经历各式各样的事，在这个过程中，我们发现阴谋，产生怀疑，跟随山姆的脚步，最终了解真相。这是一个完整的故事，也是一个好故事，明线与暗线一直交错纠缠，在游戏前期给了我很多疑惑，没想到在最后两条线其实始终是一条线，算是一个出乎意料的展开吧，但前期的伏笔又能把一切都说的通，单论故事性死亡搁浅就已经是非常优秀的程度了</p>
<p>死亡搁浅不像一般的rpg以繁琐复杂重复的战斗作为延长游戏时间的手段，安安静静的送货就是游戏的一部分，我个人是非常喜欢这种形式，当一个人走在大山之中河流之上，总会让我沉浸于送货以至于偶尔的战斗也会让人厌烦，不过这样也显得听着音乐的送货过程无比安心无比珍贵，随着主线的推进，在游戏性上一直都给人惊喜，各式各样的玩法，以高科技为基础奇思妙想出的道具与设施使得我们的送货过程充满了可能性，送货方式不再单一，这真的很振奋人心，做出一款送货游戏并不难，但死亡搁浅的送货不是游戏里的送货而是送货的游戏</p>
<p><img src="https://s2.loli.net/2022/01/09/gq6Rh2Sye9ixPE8.jpg" alt></p>
<p>给我另一中震撼的是死亡搁浅无与伦比的沉浸感，一款送货游戏并不神奇，神奇的是动用如此大的资源，花费如此深得心思创作出一款送货游戏，我们可以清清楚楚的感受到制作者所想要传达给我们的想法，配合着游戏画面与音效，我完全沉浸在了游戏之中，这是无论什么都比不了的，随着镜头的运动，场景的变化，有一种电影的质感，玩完之后就像看完了一场电影一样，惊险刺激，又回味无穷</p>
<p>在死亡搁浅中危机与灾害使人们支离破碎，玩家和山姆一起在末世中运送货物链接网络把人们团结起来，而我们的主角山姆是一个患有接触恐惧症的人，以山姆的视角我们开始了孤独的旅行，在这个世界中我们行走在空无一人的土地上背负着沉重的货物前往危险的地方，孤独是最好的形容词然而我们并不孤独，这个世界保留下了其他玩家的建筑，我们虽然看不到他们却能够感受到他们，河流上的大桥与梯子，悬崖上的绳索，荒野的充电桩，路边的寄存器，山脊上的滑索，以及各式各样的路标，前方bt，走这边，keep on keeping on ，他人的参与让我们的旅途不在一人独行，我就像山姆害怕与人接触却又不得不与人接触，当最后一切结束，山姆终于不再是一个冷漠的旁观者，在连接人与人的过程中，山姆也自然而然的融入到了这个巨大的网络当中，不在害怕失去，就像我们害怕失去朋友而不愿意再交朋友一样，这本就是无法避免的啊</p>
<p>连接，连接是游戏的主题，连接人们，连接山姆和bb，连接我和山姆，连接我和你，人与人之间的壁垒通过送货连接起来，生命的意义，灵魂的阐述，在游戏中都有独特的方式解释，还有比这更好的表达吗，我很佩服小岛，他是在太会做游戏了</p>
<p>谢谢你陪着山姆的洛，谢谢你陪着我的山姆，我们并不孤独，我们也能使他人不再孤独，没人会不需要你，你也不是不需要别人</p>
<p>说再多，也说不出那种山姆一人走在山间溪边的感受，我并不享受纯粹的孤独，我所渴望的，我所敬佩的，是哪孤独之下依然默默坚守使命的如钢般的意志和那如水一般的淡淡忧伤</p>
<p><img src="https://s2.loli.net/2022/01/08/8RKw2CHzFoubNpq.jpg" alt></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>游戏</tag>
        <tag>RPG</tag>
      </tags>
  </entry>
  <entry>
    <title>《紫罗兰永恒花园-剧场版》——一封信纸</title>
    <url>/2022/01/01/%E3%80%8A%E7%B4%AB%E7%BD%97%E5%85%B0%E6%B0%B8%E6%81%92%E8%8A%B1%E5%9B%AD-%E5%89%A7%E5%9C%BA%E7%89%88%E3%80%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="/.io//16.jpg" alt><br>
首先无可厚非的是紫罗兰是一部有缺点的作品，但我想作为一名从动画连载开始一集一集追完并且把外传和剧场版看过的观众来谈一谈这部作品的故事，在2018年开播前夕，紫罗兰就以一篇惊艳的cm震撼了我，一首《violet snow》让我心中无限荡漾，精美的作画，转场的衔接，还有那一闪而过的脸色眼眸，给当时刚刚追番的我留下了十分十分十分深刻的印象，当时我记得就有人说《京紫》将会是世纪霸权，bd销量八万八什么的，确实，以当时cm的质量已经算是横空出世了，大家都傻了，没见过怎么精致的作画，后来《darling in the franxx》也放出消息，后被人戏称国家队，2018年番剧的霸权似乎就是《京紫》与《ditf》的对抗，后来的结果可能并不如人意，不过2018的好动画算是很多了，当然在我心里《京紫》也是一部好动画</p>
<div class="bvideo">
    <a href="//www.bilibili.com/video/BV1Rx411D76Y" target="_blank">
        <div class="bvideo-box">
            <div class="bvideo-cover">
                <div class="cover-default"></div>
                <div class="bvideo-cover-layer" style="background-image:url(https://images.weserv.nl/?url=http://i0.hdslb.com/bfs/archive/7b774818e5c1bfea59a814e9311fb3d972aabf5c.jpg)">
                    <i class="icon-video"></i>
                </div>
                <span class="duration">00:14:11</span>
            </div>
            <div class="bvideo-info">
                <p class="title">紫罗兰永恒花园1080P【原版】高清预告7P合集+BMG Violet Snow</p>
                <p class="card-status">
                    <span class="play-num">
                        <i class="fa fa-youtube-play"></i>
                        <span>111.6万</span></span>
                    <span>
                        <i class="fa fa-list-alt"></i>
                        <span>3447</span></span></p>
                <div class="partition">
                    <label class="card-label">视频</label>
                    <label class="up-label"></label>
                    <label class="up-name">HI默</label>
                </div>
                <div class="actions hide"></div>
            </div>
        </div>
    </a>
</div>
<p>2018年《京紫》开播，让我意想不到的是她出奇的好看，出奇的好看，我不知道我现在再看一遍还会不会觉得她好看，但在当时，我觉得她出奇的好看，不仅画面精美，音乐好听，制作用心，作为一个动画最重要的核心—讲好一个故事，她做到了，而且做的很好，从第一集到最后一集，几乎每一集都非常棒，真挚的感情，丰满的人物，以及那无处不在浪漫与诗意，让我印象极为深刻的是剧作家的故事，当薇尔莉特撑伞在湖面一跃而起，所有的铺垫，在这慢放的时间中汇集，所有的感情，在这放慢的时间中爆发，我被感动到了，也被震撼到了，在我心中这部作品此刻就已经上升到不可比拟的地位了吧，而我现在也有点明白了，我们讲述的故事可能会老套，但我们抒发的感情永远都不会</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/524ff1a2b1db5ee0.jpg" alt></p>
<p>它的叙事方式，一直都像是一股清风，一缕花香，一首情诗，轻轻的，淡淡的，深深的，在现在你很少能看到如此慢节奏的动画了，她永远是用细微的肢体语言，伴随着简单的话语，辅之以动听的音乐，轻轻的，淡淡的，深深的带入到你的内心深处，以我来说，看这部动画真的是一种享受，在这个信息翻云覆海的时间，轻轻的欣赏，淡淡的欣赏，深深的欣赏一部作品，已经是我求之而不得事情了，我希望京紫的故事能够继续，我希望能看到更多关于薇尔莉特用语言与信件传递爱的故事，单纯的故事，单纯的讲一个故事，没有其他的吸引目光的噱头，也没有让人跌下眼镜的剧情，能时不时让人会心一笑，就再好不过了</p>
<p><img src="https://s2.loli.net/2022/01/11/3XUxrBA5oM712uF.jpg" alt></p>
<p>我只看了一遍，不论是tv还是剧场版，因为我知道，她是有缺点的，我害怕其中的缺点会因为我的重看而放大，我不是为了找出瑕疵而看动画的，我为了听一个好故事而看动画，为了感受动画所传达出的感情而看动画，那些听过的故事，感受到的情感，只需一遍，就足以使我明白，怎样的人在制作动画，她在表达什么，她在怎样表达，能通过作品就可以感受到制作组的有着怎样的性格，取其精华，去其糟粕，如果不这样，那恐怕你很难获得一些好作品了</p>
<p><img src="https://s2.loli.net/2022/01/11/9zpPObcHCdftrFg.jpg" alt></p>
<p>也许这部作品的故事很简单，也许大多数人觉得她故事很老套，我知道，但我觉得，这并不妨碍她把这个故事讲好，相反，她讲的很好，从第一集到最后一集，经过与许多人的接触，从了解他们到理解他们，最关键的是什么？是主角获得了成长，成长意味着什么？是薇尔莉特获得了自己的感受，拥有了自己的体验，获得了从书本和教诲中无法教授的道理，我想，这就是她的成长，从不知爱，经历传达爱，到理解爱，这也是成长，而另一边，从无感的少女，到理解战争的残酷又是另一种成长</p>
<p><img src="https://s2.loli.net/2022/01/11/uVyW8xLT9SaR6U3.jpg" alt></p>
<p>冰冷的机械也能传递出真挚的感情，思念的心情无论在何处都能被传达，超越时间与空间，这是京紫所表达的精神内核，我想，在我心中京紫是不该被比较的也是不该比较他人的，她仅仅在讲述故事而已，为了讲好一个好故事</p>
<p>希望你的心中留有紫罗兰的淡淡清香</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/30ece3d95a069c4e.jpg" alt></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>动画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>剧场版</tag>
      </tags>
  </entry>
  <entry>
    <title>《进击的巨人最终季》——自作多情罢了</title>
    <url>/2022/04/07/%E3%80%8A%E8%BF%9B%E5%87%BB%E7%9A%84%E5%B7%A8%E4%BA%BA%E6%9C%80%E7%BB%88%E5%AD%A3%E3%80%8B%E2%80%94%E2%80%94%E8%87%AA%E4%BD%9C%E5%A4%9A%E6%83%85%E7%BD%A2%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我还是没习惯mappa的制作，尽管有两集立体机动做的还挺好的，但这种制作也正好让巨人脱去了一层虚假的外衣让人更能关注其中的本质，让他回到应有的位置，</p>
<p>可惜无论怎样看都觉的可惜，怎样的可惜就觉得怎样的可恨，什么结局不好非要整这样的结局</p>
<p>op和ed真的想让我相信艾伦的想法，真是可笑，知道了结局之后一切的说教都显得十分可笑，毫无意义</p>
<p>在这种最终时刻，所有人似乎都失去了理智，已经疯狂，失控。</p>
<p>巨人的矛盾是无法解决的，但矛盾的大小是可以调整的，但谏人非得往矛盾激化的方向画，转移内部矛盾，创造一个共同的外敌，这是一个有效的做法，也是一个俗气的做法，在谏人手里更是一个愚蠢的做法，这种做法让整个作品的的逻辑与立意崩塌，勇敢和自由本是用来歌颂的但这或许只是我们观众的臆想而已，谏人只是想要报复这个世界而已，只是想要杀掉世界上百分之九十的人而已，这种扭曲使故事中的人物说着最好的话却做着最残忍的事，逆子弑父，孝子吃妈，手足相残，同事相杀，灭绝人类，最深的恶意被用来修饰这个残酷的世界，表达谏人对这个世界的恶意，他真的想把世界上的人一个不留的全部驱逐</p>
<p>巨人一直在制造矛盾，却无法解决，只是用另一个矛盾去掩盖这个矛盾，导致每个人都苦大仇深无法妥协阿尔敏本该担起解决这些矛盾的重要人物，但他却没有，知道最后也只是别人替他做决定，如果我们用另一种视角看待，艾伦是谏人的感性，阿尔敏是谏人的理性那么谏人就从没有想过要解决问题，他一直在随着自己的感性推进故事，随着自己的感性描绘自己内心中的故事，只是随着自己的感性散发内心的黑暗与挣扎</p>
<p>我以前就在想，为什么艾伦能一直这么愤怒呢，为什么能怎么愤怒，为什么能愤怒怎么久，为什么在杀害了无辜的人之后还能怎么愤怒，仿佛就被愤怒囚禁了一样，我以前还觉的他是个不一样的主角，但艾伦确实没有变，也没有成长，幼年的那句“一匹不留全部驱逐出去”就是艾伦的思想钢印一样，这一切在谏人的笔下把艾伦的愤怒已经描写的已经没有火焰了，只是些呛人的黑烟而已，谏人觉得只有一直愤怒，毫无成长，愚蠢至极的艾伦才是艾伦，殊不知，他就像艾伦一样，愚蠢至极，毫无成长，或许他也一直在愤怒</p>
<p>如果谏人早已经构思好整个故事的话。这个结局在他心中也因该酝酿了许久吧，一直在期待中把他画出来的一天，这种背负世界罪恶引领世界团结的世界的敌人英勇就义确实很像高中生的中二幻想，他究竟在这样的结局中感动了多少次呢？他究竟在自己幻想的世界中感动了多少次呢？他究竟被自己感动了多少次呢？</p>
<p>要是谏人能多上两年学，学学马原，或许他就会给我们带来不一样的故事了吧，一切的原罪都是不好好看书，所以朋友们我们一定要好好学习啊！！！</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/04/07/7e7c5a877fe08e78.jpeg" alt></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
        <category>动画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>粪作</tag>
      </tags>
  </entry>
  <entry>
    <title>主题格式参考手册---持续更新</title>
    <url>/2021/12/11/%E4%B8%BB%E9%A2%98%E6%A0%BC%E5%BC%8F%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div class="note info modern"><p>本文章全部参考嘉的博文”本人自用 Hexo-Butterfly 主题参考手册“<a href="https://blog.imzjw.cn/posts/bfdocs/">网址在这里</a>请去这里支持ta！！！</p>
</div>
<p>好！现在正式开始！</p>
<h1 id="Front-matter">Front-matter</h1>
<details class="folding-tag" open><summary> 展开查看 </summary>
              <div class="content">
              <p>此部分之前写过在这里用表格形式再写一遍</p><table><thead><tr><th style="text-align:center">写法</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】页面标题</td></tr><tr><td style="text-align:center">data</td><td style="text-align:center">【必需】页面创建日期</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">【必需】标签，分类，友情链接需要配置</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【可选】页面更新日期</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】页面描述</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】页面关键字</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示页面评论模块（默认true）</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】页面顶部图片</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示katex（当设置katex的per_page:false时，才需要配置，默认false）</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧面栏（默认true）</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载aplayer的js和css，请参考下文</td></tr><tr><td style="text-align:center">hightlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开（true/false）（默认为设置中highlihght_shrink的配置）</td></tr></tbody></table>
              </div>
            </details>
<h1 id="Post-Front-matter">Post Front-matter</h1>
<details class="folding-tag" open><summary> 展开查看 </summary>
              <div class="content">
              <table><thead><tr><th style="text-align:center">写法</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】文章标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">【必需】文章创建日期</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【可选】文章更新日期</td></tr><tr><td style="text-align:center">tags</td><td style="text-align:center">【可选】文章标签</td></tr><tr><td style="text-align:center">categories</td><td style="text-align:center">【可选】文章分类</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】文章关键字</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】文章描述</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】文章顶部图片</td></tr><tr><td style="text-align:center">cover</td><td style="text-align:center">【可选】文章缩略图(如果没有设置top_img,文章顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示文章评论模块(默认 true)</td></tr><tr><td style="text-align:center">toc</td><td style="text-align:center">【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td style="text-align:center">toc_number</td><td style="text-align:center">【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td style="text-align:center">copyright</td><td style="text-align:center">【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td style="text-align:center">copyright_author</td><td style="text-align:center">【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td style="text-align:center">copyright_author_href</td><td style="text-align:center">【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td style="text-align:center">copyright_url</td><td style="text-align:center">【可选】文章版权模块的<code>文章連結</code>链接</td></tr><tr><td style="text-align:center">copyright_info</td><td style="text-align:center">【可选】文章版权模块的<code>版权聲明</code>文字</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏(默认 true)</td></tr></tbody></table>
              </div>
            </details>
<h1 id="Note">Note</h1>
<div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">simple</button></li><li class="tab"><button type="button" data-href="#test1-2">modern</button></li><li class="tab"><button type="button" data-href="#test1-3">flat</button></li><li class="tab"><button type="button" data-href="#test1-4">disabled</button></li><li class="tab"><button type="button" data-href="#test1-5">no-icon</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note simple %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note simple"><p>默认 提示块标签</p>
</div>
<div class="note default simple"><p>default 提示块标签</p>
</div>
<div class="note primary simple"><p>primary 提示块标签</p>
</div>
<div class="note success simple"><p>success 提示块标签</p>
</div>
<div class="note info simple"><p>info 提示块标签</p>
</div>
<div class="note warning simple"><p>warning 提示块标签</p>
</div>
<div class="note danger simple"><p>danger 提示块标签</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note modern %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note modern"><p>默认 提示块标签</p>
</div>
<div class="note default modern"><p>default 提示块标签</p>
</div>
<div class="note primary modern"><p>primary 提示块标签</p>
</div>
<div class="note success modern"><p>success 提示块标签</p>
</div>
<div class="note info modern"><p>info 提示块标签</p>
</div>
<div class="note warning modern"><p>warning 提示块标签</p>
</div>
<div class="note danger modern"><p>danger 提示块标签</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note flat %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note flat"><p>默认 提示块标签</p>
</div>
<div class="note default flat"><p>default 提示块标签</p>
</div>
<div class="note primary flat"><p>primary 提示块标签</p>
</div>
<div class="note success flat"><p>success 提示块标签</p>
</div>
<div class="note info flat"><p>info 提示块标签</p>
</div>
<div class="note warning flat"><p>warning 提示块标签</p>
</div>
<div class="note danger flat"><p>danger 提示块标签</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note disabled %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note disabled"><p>默认 提示块标签</p>
</div>
<div class="note default disabled"><p>default 提示块标签</p>
</div>
<div class="note primary disabled"><p>primary 提示块标签</p>
</div>
<div class="note success disabled"><p>success 提示块标签</p>
</div>
<div class="note info disabled"><p>info 提示块标签</p>
</div>
<div class="note warning disabled"><p>warning 提示块标签</p>
</div>
<div class="note danger disabled"><p>danger 提示块标签</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-5"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note no-icon flat"><p>默认 提示块标签</p>
</div>
<div class="note default no-icon flat"><p>default 提示块标签</p>
</div>
<div class="note primary no-icon flat"><p>primary 提示块标签</p>
</div>
<div class="note success no-icon flat"><p>success 提示块标签</p>
</div>
<div class="note info no-icon flat"><p>info 提示块标签</p>
</div>
<div class="note warning no-icon flat"><p>warning 提示块标签</p>
</div>
<div class="note danger no-icon flat"><p>danger 提示块标签</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="自定义-icon">自定义 <code>icon</code></h2>
<div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">simple</button></li><li class="tab"><button type="button" data-href="#test2-2">modern</button></li><li class="tab"><button type="button" data-href="#test2-3">flat</button></li><li class="tab"><button type="button" data-href="#test2-4">disabled</button></li><li class="tab"><button type="button" data-href="#test2-5">no-icon</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;</span><br><span class="line">你是刷 Visa 还是是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-bullhorn&#x27; simple %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fas fa-fan&#x27; simple%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;</span><br><span class="line">该充电了哦！</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fab fa-internet-explorer&#x27; simple %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p>
</div>
<div class="note red icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p>
</div>
<div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p>
</div>
<div class="note green icon simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p>
</div>
<div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p>
</div>
<div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p>
</div>
<div class="note blue icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 还是是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-bullhorn&#x27; modern %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fas fa-fan&#x27; modern%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;</span><br><span class="line">该充电了哦！</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fab fa-internet-explorer&#x27; modern %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p>
</div>
<div class="note red icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p>
</div>
<div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p>
</div>
<div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p>
</div>
<div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p>
</div>
<div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p>
</div>
<div class="note blue icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 还是是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-bullhorn&#x27; flat %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fas fa-fan&#x27; flat%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;</span><br><span class="line">该充电了哦！</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fab fa-internet-explorer&#x27; flat %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p>
</div>
<div class="note red icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p>
</div>
<div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p>
</div>
<div class="note green icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p>
</div>
<div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p>
</div>
<div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p>
</div>
<div class="note blue icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled  %&#125;</span><br><span class="line">你是刷 Visa 还是是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-bullhorn&#x27; disabled  %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled  %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fas fa-fan&#x27; disabled %&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled  %&#125;</span><br><span class="line">该充电了哦！</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled  %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fab fa-internet-explorer&#x27; disabled  %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是是 UnionPay</p>
</div>
<div class="note red icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p>
</div>
<div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p>
</div>
<div class="note green icon disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p>
</div>
<div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>该充电了哦！</p>
</div>
<div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p>
</div>
<div class="note blue icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-5"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue no-icon %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink no-icon %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red no-icon %&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange no-icon %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple no-icon %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green no-icon %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p>
</div>
<div class="note blue no-icon flat"><p>2021年快到了…</p>
</div>
<div class="note pink no-icon flat"><p>小心开车 安全至上</p>
</div>
<div class="note red no-icon flat"><p>这是三片呢？还是四片？</p>
</div>
<div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p>
</div>
<div class="note purple no-icon flat"><p>剪刀石头布</p>
</div>
<div class="note green no-icon flat"><p>前端最讨厌的浏览器</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="上标标签tip">上标标签tip</h2>
<div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test3-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#test3-3">样式预览</button></li><li class="tab"><button type="button" data-href="#test3-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><ol>
<li>样式：success、error、warning、bolt、ban、home、sync、cogs、key、bell</li>
<li>自定义图标：支持 fontawesome。</li>
</ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test3-3"><div class="tip "><p>默认情况</p>
</div>
<div class="tip success"><p>success</p>
</div>
<div class="tip error"><p>error</p>
</div>
<div class="tip warning"><p>warning</p>
</div>
<div class="tip bolt"><p>bolt</p>
</div>
<div class="tip ban"><p>ban</p>
</div>
<div class="tip home"><p>home</p>
</div>
<div class="tip sync"><p>sync</p>
</div>
<div class="tip cogs"><p>cogs</p>
</div>
<div class="tip key"><p>key</p>
</div>
<div class="tip bell"><p>bell</p>
</div>
<div class="tip fa-atom"><p>自定义font awesome图标</p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip %&#125;默认情况&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="动态标签anima">动态标签anima</h2>
<div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#test4-3">样式预览</button></li><li class="tab"><button type="button" data-href="#test4-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test4-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>更多详情请参看 <a href="https://l-lin.github.io/font-awesome-animation">font-awesome-animation</a>文档</p>
<ol>
<li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li>
<li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添 加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>
You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li>
<li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li>
</ol>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test4-3"><ol>
<li>On DOM load（当页面加载时显示动画）</li>
</ol>
<div class="tip warning faa-horizontal animated"><p>warning</p>
</div>
<div class="tip ban faa-flash animated"><p>ban</p>
</div>
<ol start="2">
<li>调整动画速度</li>
</ol>
<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p>
</div>
<div class="tip ban faa-flash animated faa-slow"><p>ban</p>
</div>
<ol start="3">
<li>On hover（当鼠标悬停时显示动画）</li>
</ol>
<div class="tip warning faa-horizontal animated-hover"><p>warning</p>
</div>
<div class="tip ban faa-flash animated-hover"><p>ban</p>
</div>
<ol start="4">
<li>On parent hover（当鼠标悬停在父级元素时显示动画）</li>
</ol>
<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div>
<div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p><strong>1. On DOM load（当页面加载时显示动画）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure>
<p><strong>2. 调整动画速度</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure>
<p><strong>3. On hover（当鼠标悬停时显示动画）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure>
<p><strong>4. On parent hover（当鼠标悬停在父级元素时显示动画）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;&lt;p class=&quot;faa-horizontal&quot;&gt;warning&lt;/p&gt;&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;&lt;p class=&quot;faa-flash&quot;&gt;ban&lt;/p&gt;&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h3 id="动态小标签">动态小标签</h3>
<p><strong>实例：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">On DOM load<br> 当页面加载时<br>显示动画</th>
<th><strong>On hover</strong><br><strong>当鼠标悬停时</strong><br><strong>显示动画</strong></th>
<th><strong>On parent hover</strong><br><strong>当鼠标悬停</strong><br><strong>在父级元素时</strong><br><strong>显示动画</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><i class="fa fa-wrench faa-wrench animated"></i> faa-wrench animated</td>
<td><i class="fa fa-wrench faa-wrench animated-hover"></i> faa-wrench animated-hover</td>
<td><span class="faa-parent animated-hover"><i class="fas fa-wrench faa-wrench"></i> faa-wrench</span></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;i class=&quot;fa fa-wrench faa-wrench animated&quot;&gt;&lt;/i&gt; faa-wrench animated</code></td>
<td><code>&lt;i class=&quot;fa fa-wrench faa-wrench animated-hover&quot;&gt;&lt;/i&gt; faa-wrench animated-hover</code></td>
<td><code>&lt;span class=&quot;faa-parent animated-hover&quot;&gt;&lt;i class=&quot;fas fa-wrench faa-wrench&quot;&gt;&lt;/i&gt;&amp;nbsp;faa-wrench&lt;/span&gt;</code></td>
</tr>
<tr>
<td style="text-align:center"><i class="fa-solid fa-thumbs-up faa-vertical animated"></i> faa-vertical animated</td>
<td><i class="fa-solid fa-thumbs-up faa-vertical animated-hover"></i> faa-vertical animated-hover</td>
<td><span class="faa-parent animated-hover"><i class="fa-solid fa-thumbs-up faa-vertical"></i>faa-vertical</span></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;i class=&quot;fa-solid fa-thumbs-up faa-vertical animated&quot;&gt;&lt;/i&gt; faa-vertical animated</code></td>
<td><code>&lt;i class=&quot;fa-solid fa-thumbs-up faa-vertical animated-hover&quot;&gt;&lt;/i&gt; faa-vertical animated-hover</code></td>
<td><code>&lt;span class=&quot;faa-parent animated-hover&quot;&gt;&lt;i class=&quot;fa-solid fa-thumbs-up faa-vertical&quot;&gt;&lt;/i&gt;faa-vertical&lt;/span&gt;</code></td>
</tr>
</tbody>
</table>
<p>更多动画效果查看<a href="https://l-lin.github.io/font-awesome-animation">font-awesome-animation</a>文档</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>博客创建</category>
        <category>主题格式</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>主题格式</tag>
      </tags>
  </entry>
  <entry>
    <title>创建springboot</title>
    <url>/2021/12/08/%E5%88%9B%E5%BB%BAspringboot/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="创建springboot">创建springboot</h1>
<h3 id="用到的工具">用到的工具</h3>
<ul>
<li>IDEA</li>
<li>mysql</li>
<li>HeidiSQL</li>
</ul>
<h2 id="首先创建文件">首先创建文件</h2>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/040feaccdfe664d9.png" alt="创建文件"></p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/6cbebfa865823d54.png" alt="创建文件2"></p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/c2fd6df0da5e79aa.png" alt="创建文件3"></p>
<h2 id="创建如下文件夹">创建如下文件夹</h2>
<p>有一些删掉</p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/f8087e80d4a0a420.png" alt="文件目录"></p>
<h2 id="代码部分">代码部分</h2>
<h3 id="UserController">UserController</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootdemo.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootdemo.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootdemo.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryUserList&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.queryUserList();</span><br><span class="line">        <span class="keyword">for</span> (User user:userList)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;测试接口!!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        userMapper.addUser(<span class="keyword">new</span> User(<span class="number">3</span>,<span class="string">&quot;小王&quot;</span>,<span class="string">&quot;345&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;addUser-ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/updateUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        userMapper.updateUser(<span class="keyword">new</span> User(<span class="number">3</span>,<span class="string">&quot;小张&quot;</span>,<span class="string">&quot;567&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;updateUser-ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUser</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        userMapper.updateUser(new User(3,&quot;小张&quot;,&quot;567&quot;));</span></span><br><span class="line">        userMapper.deleteUser(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;updateUser-ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="UserMapper">UserMapper</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootdemo.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootdemo.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">//表示这个注解是mybatis的mapper类</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;<span class="comment">//增加user</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;<span class="comment">//更改user</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;<span class="comment">//删除user</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="User">User</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootdemo.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;          <span class="comment">//根据数据库修改</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="SperingbootdemoApplication">SperingbootdemoApplication</h3>
<p>不用改</p>
<h3 id="UserMapper-xml">UserMapper.xml</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">&quot;com.example.springbootdemo.mapper.UserMapper&quot;</span>&gt;</span><br><span class="line">    &lt;select id=<span class="string">&quot;queryUserList&quot;</span> resultType=<span class="string">&quot;com.example.springbootdemo.pojo.User&quot;</span>&gt;</span><br><span class="line">        select * from user</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=<span class="string">&quot;queryUserById&quot;</span> resultType=<span class="string">&quot;com.example.springbootdemo.pojo.User&quot;</span>&gt;</span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;insert id=<span class="string">&quot;addUser&quot;</span> parameterType=<span class="string">&quot;com.example.springbootdemo.pojo.User&quot;</span>&gt;</span><br><span class="line">        <span class="function">insert into <span class="title">user</span><span class="params">(id,name,pwd)</span> <span class="title">values</span><span class="params">(#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span></span></span><br><span class="line"><span class="function">    &lt;/insert&gt;<span class="comment">//根据你数据库适当修改这里的参数</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    &lt;update id</span>=<span class="string">&quot;updateUser&quot;</span> parameterType=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span><br><span class="line">        update  user set name = #&#123;name&#125;,pwd=&#123;pwd&#125; where id = #&#123;id&#125;</span><br><span class="line">    &lt;/update&gt;</span><br><span class="line"></span><br><span class="line">    &lt;delete id=<span class="string">&quot;deleteUser&quot;</span> parameterType=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    &lt;/delete&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>
<h3 id="application-properties">application.properties</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring.datasource.username=root //数据库账号</span><br><span class="line">spring.datasource.password=1234 //数据库密码</span><br><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/springbootdemodb?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">server.port=8082 //你选择的端口有时候被占用改一下就行</span><br><span class="line">#??mybatis</span><br><span class="line">mybatis.type-aliases-package=com.example.springbootdemo.pojo</span><br><span class="line">mybatis.mapper-locations=classpath:mybatis/mapper/*.xml</span><br></pre></td></tr></table></figure>
<p>注意spring.datasource.url=jdbc:mysql://localhost:3306/springbootdemodb（这里是你的数据库名称）?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</p>
<h3 id="pom-xml">pom.xml</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;groupId&gt;com.zya&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springboot-mybais_01&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;name&gt;springboot-mybais_01&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;springboot-mybais_01&lt;/description&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<h3 id="最后贴一下数据库">最后贴一下数据库</h3>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/0a5a1d75bee292c1.png" alt="数据库"></p>
<h2 id="运行">运行</h2>
<p>运行SpringbootdemoApplication</p>
<p>在网页打开</p>
<p>localhost://8082/test</p>
<p>测试是否连接成功</p>
<p>localhost://8082/addUser</p>
<p>添加用户，添加的用户为你在UserController中设定的</p>
<p>改删类似，不在赘述。</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>项目实列</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>博客表头设置</title>
    <url>/2021/12/07/%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>我用的butterfly主题，配了一下午才改的能看了一点，以下是我修改时用到的网站和问题</strong></p>
<h3 id="butterfly主题网站">butterfly主题网站</h3>
<p><a href="https://butterfly.js.org/posts/dc584b87/">点这里</a></p>
<p>对于初学者（比如我）来说干看真的很费劲，有很多看不懂和不理解的地方，所以我去b站找了个视频配合着看效率就高了很多</p>
<div class="bvideo">
    <a href="//www.bilibili.com/video/BV1Ko4y1S7mv" target="_blank">
        <div class="bvideo-box">
            <div class="bvideo-cover">
                <div class="cover-default"></div>
                <div class="bvideo-cover-layer" style="background-image:url(https://images.weserv.nl/?url=http://i2.hdslb.com/bfs/archive/cf6a8413b8ec8bd17612c2b48055be269b7ff496.jpg)">
                    <i class="icon-video"></i>
                </div>
                <span class="duration">00:59:29</span>
            </div>
            <div class="bvideo-info">
                <p class="title">使用Hexo搭建个人博客手摸手教学(10)|ButterFly主题配置一</p>
                <p class="card-status">
                    <span class="play-num">
                        <i class="fa fa-youtube-play"></i>
                        <span>1.8万</span></span>
                    <span>
                        <i class="fa fa-list-alt"></i>
                        <span>97</span></span></p>
                <div class="partition">
                    <label class="card-label">视频</label>
                    <label class="up-label"></label>
                    <label class="up-name">卷二兔</label>
                </div>
                <div class="actions hide"></div>
            </div>
        </div>
    </a>
</div>
<p>然后有一点扰了我好久的是在你没设定默认top_img时的顶端图片是你设定top_img之后也不会变得（反正我没变）解决方法就是打开没改顶端图片的md文件删除表头重新再写入即可</p>
<p>看了下还有好多技巧要学习</p>
<h3 id="以下是表头的页面配置：">以下是表头的页面配置：</h3>
<p>Page Front-matter 用于页面配置</p>
<p>title	【必需】页面标题<br>
date	【必需】页面创建日期<br>
type	【必需】标签，分类和友情链接<br>
updated	【可选】页面更新日期<br>
description	【可选】页面描述<br>
keywords	【可选】页面关键字<br>
comments	【可选】显示页面评论模块（默认 true）<br>
top_img	【可选】页面顶部图片<br>
mathjax	【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)<br>
katex	【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)<br>
aside	【可选】显示侧边栏 (默认 true)<br>
aplayer	【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置<br>
highlight_shrink【可选】配置代码框是否展开(true/false)(默认為设置中highlight_shrink的配置)</p>
<p>Post Front-matter 用於文章页配置</p>
<p>title	【必需】文章标题<br>
date	【必需】文章创建日期<br>
updated	【可选】文章更新日期<br>
tags	【可选】文章标签<br>
categories	【可选】文章分类<br>
keywords	【可选】文章关键字<br>
description	【可选】文章描述<br>
top_img	【可选】文章顶部图片<br>
cover【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)<br>
sticky: 1 【可选】文章权重<br>
comments	【可选】显示文章评论模块(默认 true)<br>
toc	【可选】显示文章TOC(默认為设置中toc的enable配置)<br>
toc_number	【可选】显示toc_number(默认為设置中toc的number配置)<br>
copyright	【可选】显示文章版权模块(默认為设置中post_copyright的enable配置)<br>
copyright_author	【可选】文章版权模块的文章作者<br>
copyright_author_href	【可选】文章版权模块的文章作者链接<br>
copyright_url	【可选】文章版权模块的文章连结链接<br>
copyright_info	【可选】文章版权模块的版权声明文字<br>
mathjax	【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)<br>
katex	【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)<br>
aplayer	【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置<br>
highlight_shrink【可选】配置代码框是否展开(true/false)(默认為设置中highlight_shrink的配置)<br>
aside	【可选】显示侧边栏 (默认 true)</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>博客创建</category>
      </categories>
  </entry>
  <entry>
    <title>怎样建立我的博客</title>
    <url>/2021/12/06/%E6%80%8E%E6%A0%B7%E5%BB%BA%E7%AB%8B%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="如何创建一个博客？">如何创建一个博客？</h1>
<h2 id="1-如何创建？">1.如何创建？</h2>
<p>看看这个up</p>
<p><a href="https://www.bilibili.com/video/BV1Yb411a7ty">https://www.bilibili.com/video/BV1Yb411a7ty</a></p>
<h2 id="2-如何更换主题？">2.如何更换主题？</h2>
<p>看看这个网站</p>
<p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p>
<h2 id="3-如何写博客？">3.如何写博客？</h2>
<p>参考这位up的视频</p>
<p><a href="https://www.bilibili.com/video/BV1n4411R7sT?p=5">https://www.bilibili.com/video/BV1n4411R7sT?p=5</a></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>博客创建</category>
      </categories>
  </entry>
  <entry>
    <title>我为什么写这一篇</title>
    <url>/2022/01/23/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E8%BF%99%E4%B8%80%E7%AF%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我以后会想怎么用的，😀</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客文章</title>
    <url>/2021/12/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>##建立我自己的个人博客<br>
跟着b站up“codesheep”学的<br>
<a href="https://www.bilibili.com/video/BV1Yb411a7ty">https://www.bilibili.com/video/BV1Yb411a7ty</a></p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>博客创建</category>
      </categories>
  </entry>
  <entry>
    <title>测试bilibili卡片插件</title>
    <url>/2021/12/07/%E6%B5%8B%E8%AF%95bilibili%E5%8D%A1%E7%89%87%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="测试测试">测试测试</h2>
<div class="bvideo">
    <a href="//www.bilibili.com/video/BV1vs411D7JZ" target="_blank">
        <div class="bvideo-box">
            <div class="bvideo-cover">
                <div class="cover-default"></div>
                <div class="bvideo-cover-layer" style="background-image:url(https://images.weserv.nl/?url=http://i1.hdslb.com/bfs/archive/b2942e658cf331962d50be1c06fce3e3ef61adb5.png)">
                    <i class="icon-video"></i>
                </div>
                <span class="duration">00:04:11</span>
            </div>
            <div class="bvideo-info">
                <p class="title">【正式】【とあ】拼凑的断音【初音ミク】</p>
                <p class="card-status">
                    <span class="play-num">
                        <i class="fa fa-youtube-play"></i>
                        <span>138.9万</span></span>
                    <span>
                        <i class="fa fa-list-alt"></i>
                        <span>3212</span></span></p>
                <div class="partition">
                    <label class="card-label">视频</label>
                    <label class="up-label"></label>
                    <label class="up-name">とあ</label>
                </div>
                <div class="actions hide"></div>
            </div>
        </div>
    </a>
</div>
<p>代码格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% bilicard BV号 %&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>博客创建</category>
      </categories>
  </entry>
  <entry>
    <title>测试分类</title>
    <url>/2021/12/09/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>123456</p>
<link rel="stylesheet" href="/css/bilicard.css" type="text/css">]]></content>
      <categories>
        <category>杂谈感想</category>
      </categories>
  </entry>
</search>
